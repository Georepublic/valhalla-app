{"version":3,"sources":["Controls/settings-options.js","reducers/common.js","utils/polyline.js","utils/valhalla.js","reducers/directions.js","reducers/isochrones.js","reducers/index.js","actions/types.js","Map/extraMarkers.js","images/bus.svg","utils/nominatim.js","actions/commonActions.js","actions/directionsActions.js","utils/geom.js","actions/isochronesActions.js","utils/heightgraph.js","Map/Map.jsx","Controls/Directions/Waypoints/Waypoint.jsx","Controls/Directions/Waypoints/index.jsx","images/scooter.svg","images/car.svg","images/truck.svg","images/bike.svg","images/pedestrian.svg","components/profile-picker.jsx","Controls/Directions/settings.jsx","Controls/Directions/index.jsx","Controls/Isochrones/Waypoints/index.jsx","Controls/Isochrones/settings.jsx","Controls/Isochrones/index.js","Controls/Directions/Summary.jsx","Controls/Directions/Maneuvers.jsx","Controls/Directions/OutputControl.jsx","Controls/Isochrones/Summary.jsx","Controls/Isochrones/ContoursInformation.jsx","Controls/Isochrones/OutputControl.jsx","Controls/index.jsx","components/CustomSlider.jsx","Controls/settings-panel.jsx","App.jsx","index.js"],"names":["length","name","param","unit","description","settings","min","max","step","width","weight","height","countryCrossingPenality","countryCrossingCost","turnPenalityCost","useHighways","useTollways","useFerry","ferryCost","useLivingStreets","useTracks","privateAccessPenalty","ignoreClosures","closureFactor","servicePenalty","serviceFactor","excludeUnpaved","shortest","excludeCashOnlyTolls","useHills","topSpeed","settingsInit","maneuver_penalty","country_crossing_penalty","country_crossing_cost","axle_load","hazmat","use_highways","use_tolls","use_ferry","ferry_cost","use_living_streets","use_tracks","private_access_penalty","ignore_closures","closure_factor","service_penalty","service_factor","exclude_unpaved","exclude_cash_only_tolls","bicycle_type","cycling_speed","use_roads","use_hills","avoid_bad_surfaces","top_speed","use_primary","walking_speed","walkway_factor","sidewalk_factor","alley_factor","driveway_factor","step_penalty","max_hiking_difficulty","exclude_polygons","use_geocoding","profile_settings","truck","numeric","boolean","enum","car","bus","pedestrian","motor_scooter","bicycle","enums","key","text","value","settings_general","all","initialState","activeTab","showSettings","coordinates","loading","message","receivedAt","type","icon","topic","profile","decode","str","precision","latitude_change","index","lat","lng","shift","result","byte","factor","Math","pow","charCodeAt","push","VALHALLA_OSM_URL","process","buildHeightRequest","latLngs","shape","latLng","lon","range","id","makeContours","maxRange","interval","contours","time","reverse","makeLocations","waypoints","locations","waypoint","displaylnglat","successful","highlightSegment","startIndex","endIndex","zoomObj","timeNow","selectedAddresses","results","data","show","userInput","isFetching","geocodeResults","selectedAddress","rootReducer","combineReducers","common","state","action","payload","directions","inclineDeclineTotal","provider","undefined","map","i","addresses","addressindex","inputValue","selected","filter","v","splice","isochrones","maxRangeName","intervalName","ExtraMarkers","Icon","L","extend","options","iconSize","iconAnchor","popupAnchor","shadowAnchor","shadowSize","className","prefix","extraClasses","innerHTML","markerColor","svgBorderColor","svgOpacity","iconColor","number","svg","initialize","setOptions","this","createIcon","div","document","createElement","_createInner","bgPos","style","backgroundPosition","x","y","_setIconStyles","iconColorStyle","iconNumber","img","anchor","leafletName","size","divideBy","marginLeft","marginTop","createShadow","_path","forward_geocode","axios","get","params","q","format","limit","reverse_geocode","parseGeocodeResponse","lngLat","Object","prototype","toString","call","processedResults","entries","error","toLowerCase","title","addresslnglat","sourcelnglat","display_name","osm_type","osm_id","parseFloat","showLoading","sendMessage","message_object","Date","now","updateSettings","object","updateProfile","updateTab","zoomTo","coords","updatePermalink","dispatch","getState","queryParams","URLSearchParams","set","path","wps","wp","center","window","history","replaceState","downloadFile","fileName","fileType","blob","Blob","aElem","download","href","URL","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","filterProfileSettings","filteredSettings","setting","serverMapping","makeRequest","activeWaypoints","getActiveWaypoints","valhallaRequest","valhalla_profile","json","costing","costing_options","directions_options","units","buildDirectionsRequest","fetchValhallaDirections","hasOwnProperty","headers","then","decodedGeometry","trip","legs","feat","parseDirectionsGeometry","registerRouteResponse","catch","response","error_msg","error_code","clearRoutes","status","finally","setTimeout","fetchReverseGeocodePerma","requestGeocodeResults","permaLast","doAddWaypoint","processGeocodeResponse","console","log","fetchReverseGeocode","fromDrag","receiveGeocodeResults","updateTextInput","toFixed","join","placeholderAddress","fetchGeocode","doRemoveWaypoint","clearWaypoints","Array","fill","_","emptyWaypoint","highlightManeuver","fromTo","zoomToManeuver","doInsert","maxIndex","apply","emptyWp","isFinite","insertWaypoint","addWaypoint","showProvider","isValidCoordinates","validLat","test","validLon","makeIsochronesRequest","buildIsochronesRequest","fetchValhallaIsochrones","features","forEach","feature","properties","area","polygon","turf","geometry","e","calcArea","registerIsoResponse","clearIsos","obj","updateIsoSettings","fetchReverseGeocodeIso","colorMappings","steepness","color","OSMTiles","tileLayer","attribution","convertDDToDMS","decimalDegrees","isoCenterLayer","featureGroup","isoPolygonLayer","routeMarkersLayer","routeLineStringLayer","highlightRouteSegmentlayer","highlightRouteIndexLayer","excludePolygonsLayer","mapParams","zoomControl","zoom","maxZoom","minZoom","layers","routeObjects","Map","props","componentDidUpdate","prevProps","prevState","addWaypoints","addIsoCenter","addIsochrones","R","zoomToCoordinates","addRoutes","handleHighlightSegment","clearLayers","fitBounds","padding","idx","setView","highlightMarker","marker","pmIgnore","addTo","getIsoTooltip","contour","polyline","slice","opacity","keys","coords_reversed","pane","bindTooltip","permanent","sticky","formatDuration","durationInSeconds","date","getDate","getHours","getMinutes","getRouteToolTip","summary","hg","_showState","_expand","handleAddWaypoint","closePopup","updateWaypointPosition","handleAddIsoWaypoint","updateIsoPosition","address","isoMarker","draggable","on","target","getLatLng","getHeightData","heightPayload","_removeChart","setState","isHeightLoading","post","heightData","rangeHeightData","LineStringCoordinates","heightClasses","inclineTotal","declineTotal","item","riseThis","rise","slope","heightClass","isNaN","deriveHeightClass","attributeType","buildHeightgraphData","JSON","parse","stringify","pair","range_height","addData","layerControl","showPopup","isLocateLoading","locate","createPane","baseMaps","OpenStreetMap","overlayMaps","Waypoints","Routes","Isochrones","control","position","brand","onAdd","DomUtil","create","addControl","valhallaBrand","popup","event","hasCopied","setLatLng","latlng","openOn","showInfoPopup","update","pm","globalRemovalEnabled","globalDrawModeEnabled","getHeight","addControls","drawCircle","drawMarker","drawPolyline","cutPolygon","drawCircleMarker","drawRectangle","dragMode","allowSelfIntersection","editPolygon","deleteLayer","setGlobalOptions","layerGroup","layer","updateExcludePolygons","heightgraph","mappings","graphStyle","translation","distance","expandCallback","expand","expandControls","highlightStyle","$","resizable","handles","minWidth","minHeight","stop","ui","element","css","left","top","resize","originalPosition","nextProps","nextState","showRestrictions","activeDataset","excludePolygons","eachLayer","lngLatArray","_latlngs","coord","buildLocateRequest","elevation","wpMarker","isInfo","leafletPopupDiv","querySelector","Fragment","ReactDOM","createPortal","Button","Group","basic","Popup","content","trigger","compact","onCopy","onClick","getLocate","disabled","Label","vertical","React","Component","connect","Waypoint","handleSearchChange","handleResultSelect","open","resultRenderer","rel","bind","fetchGeocodeResults","debounce","split","parseInt","Search","fluid","input","iconPosition","onSearchChange","onResultSelect","showNoResults","onFocus","onMouseDown","onBlur","onKeyPress","placeholder","ownProps","handleDismiss","visible","componentDidMount","onDragEnd","destination","items","list","from","removed","reorder","source","droppableId","provided","snapshot","droppableProps","ref","innerRef","isDraggingOver","paddingBottom","maxHeight","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","paddingLeft","paddingRight","_excluded","_extends","assign","arguments","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","viewBox","d","ForwardRef","forwardRef","fillRule","clipRule","iconMap","ProfilePicker","group","popupContent","profiles","activeProfile","handleUpdateProfile","active","Settings","handleRemoveWaypoints","handleSettings","DirectionsControl","Divider","fitted","activeIndex","handleClick","titleProps","newIndex","handleIntervalChange","handleIsoSliderUpdateSettings","handleRangeChange","nextMaxRange","nextInterval","controlSettings","minCharacters","Accordion","Title","Content","Form","inline","Input","label","onChange","cursor","Slider","aria-label","valueLabelDisplay","handleRemoveIsos","IsochronesControl","Summary","handleChange","checked","duration","intervalToDuration","start","end","durationStr","days","hours","minutes","seconds","alignSelf","flexBasis","circular","flexGrow","slider","marginRight","Maneuvers","highlightMnv","sIdx","eIdx","zoomToMnv","startIndices","0","endShapeIndex","maneuvers","end_shape_index","leg","mnv","j","onMouseEnter","begin_shape_index","onMouseLeave","Header","as","instruction","visibleLength","getLength","toISOString","substr","cost","OutputControl","exportToJson","preventDefault","dateNow","exportToGeoJson","toGeoJSON","showResults","showManeuvers","nextContext","dtNow","getMonth","getFullYear","getSeconds","Segment","margin","display","toggle","dformat","ContoursInformation","controlStyle","zIndex","overflow","pairwise","arr","func","cnt","MainControl","toast","fromEntries","location","searchParams","pathname","Number","processedCoords","current","next","fromPerma","maxRangeValue","intervalValue","handleTabChange","appPanes","menuItem","render","Tab","Pane","attached","Directions","ServiceTabs","onTabChange","menu","pointing","panes","CustomSlider","option","handleUpdateSettings","useState","sliderVal","setSliderVal","useEffect","Checkbox","SettingsPanel","handleShowSettings","settingsType","handleBikeTypeChange","resetConfigSettings","extractSettings","activeIndexProfile","activeIndexGeneral","generalSettings","extraSettings","copied","no_profile_settings","right","Grid","columns","divided","Row","Column","Dropdown","selection","labelPosition","App","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","getElementById"],"mappings":"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","file":"static/js/main.86aa55d6.chunk.js","sourcesContent":["const length = {\n  name: 'Length',\n  param: 'length',\n  unit: 'm',\n  description: 'The length of the vehicle',\n  settings: {\n    min: 1.0,\n    max: 50.0,\n    step: 0.5\n  }\n}\n\nconst width = {\n  name: 'Width',\n  param: 'width',\n  unit: 'm',\n  description: 'The width of the vehicle',\n  settings: {\n    min: 1.0,\n    max: 10,\n    step: 0.5\n  }\n}\n\nconst weight = {\n  name: 'Weight',\n  param: 'weight',\n  unit: 'tons',\n  description: 'The weight of the vehicle',\n  settings: {\n    min: 1,\n    max: 100,\n    step: 1\n  }\n}\n\nconst height = {\n  name: 'Height',\n  param: 'height',\n  unit: 'm',\n  description: 'The height of the vehicle',\n  settings: {\n    min: 1,\n    max: 10,\n    step: 0.5\n  }\n}\n\nconst axleLoad = {\n  name: 'Axle load',\n  param: 'axle_load',\n  description: 'The axle load of the vehicle',\n  unit: 'tons',\n  settings: {\n    min: 1,\n    max: 50,\n    step: 1\n  }\n}\n\nconst countryCrossingPenality = {\n  name: 'Border penalty',\n  param: 'country_crossing_penalty',\n  description:\n    'A penalty applied for a country crossing. This penalty can be used to create paths that avoid spanning country boundaries. The default penalty is 0.',\n  unit: 'sec',\n  settings: {\n    min: 0,\n    max: 1000,\n    step: 60\n  }\n}\n\nconst countryCrossingCost = {\n  name: 'Border cost',\n  param: 'country_crossing_cost',\n  description:\n    'A cost applied when encountering an international border. This cost is added to the estimated and elapsed times. The default cost is 600 seconds.',\n  unit: 'sec',\n  settings: {\n    min: 0,\n    max: 5000,\n    step: 100\n  }\n}\n\nconst turnPenalityCost = {\n  name: 'Turn penalty',\n  param: 'maneuver_penalty',\n  description:\n    'A penalty applied when transitioning between roads that do not have consistent naming–in other words, no road names in common. This penalty can be used to create simpler routes that tend to have fewer maneuvers or narrative guidance instructions. The default maneuver penalty is five seconds.',\n  unit: 'sec',\n  settings: {\n    min: 0,\n    max: 20,\n    step: 1\n  }\n}\n\nconst hazardousMaterials = {\n  name: 'Hazardous materials',\n  description: 'Whether the vehicle is carrying hazardous materials',\n  param: 'hazmat'\n}\n\nconst useHighways = {\n  name: 'Use Highways',\n  param: 'use_highways',\n  description:\n    'This value indicates the willingness to take highways. Checking this will favor highways whilse unchecking it will try to avoid highways. Note that sometimes highways are required to complete a route so unchecking this does not guarantee to avoid highways entirely.',\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\nconst useTollways = {\n  name: 'Use Tollways',\n  param: 'use_tolls',\n  description:\n    'This value indicates the willingness to take roads with tolls. Checking this option will not attempt to avoid them whilst unchecking this will attempt to avoid toll ways. Note that sometimes roads with tolls are required to complete a route so values of 0 are not guaranteed to avoid them entirely.',\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\nconst useFerry = {\n  name: 'Use Ferries',\n  param: 'use_ferry',\n  description:\n    'This value indicates the willingness to take ferries. This is a range of values between 0 and 1. Values near 0 attempt to avoid ferries and values near 1 will favor ferries. The default value is 0.5. Note that sometimes ferries are required to complete a route so values of 0 are not guaranteed to avoid ferries entirely.',\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst ferryCost = {\n  name: 'Ferry Cost',\n  param: 'ferry_cost',\n  description:\n    'A cost applied when entering a ferry. This cost is added to the estimated and elapsed times. The default cost is 300 seconds (5 minutes).',\n  unit: 'sec',\n  settings: {\n    min: 0,\n    max: 5000,\n    step: 100\n  }\n}\n\nconst useLivingStreets = {\n  name: 'Use Living Streets',\n  param: 'use_living_streets',\n  description:\n    'This value indicates the willingness to take living streets. This is a range of values between 0 and 1. Values near 0 attempt to avoid living streets and values near 1 will favor living streets. The default value is 0 for trucks, 0.1 for cars, buses, motor scooters and motorcycles. Note that sometimes living streets are required to complete a route so values of 0 are not guaranteed to avoid living streets entirely.',\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst useTracks = {\n  name: 'Use Tracks',\n  param: 'use_tracks',\n  description:\n    'This value indicates the willingness to take track roads. This is a range of values between 0 and 1. Values near 0 attempt to avoid tracks and values near 1 will favor tracks a little bit. The default value is 0 for autos, 0.5 for motor scooters and motorcycles. Note that sometimes tracks are required to complete a route so values of 0 are not guaranteed to avoid tracks entirely.',\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst privateAccessPenalty = {\n  name: 'Private Access Penalty',\n  param: 'private_access_penalty',\n  description:\n    'A penalty applied when a gate or bollard with access=private is encountered. The default private access penalty is 450 seconds.',\n  unit: 'sec',\n  settings: {\n    min: 0,\n    max: 5000,\n    step: 100\n  }\n}\n\nconst ignoreClosures = {\n  name: 'Ignore Closures',\n  description:\n    'If set to true, ignores all closures, marked due to live traffic closures, during routing. ',\n  param: 'ignore_closures'\n}\n\nconst closureFactor = {\n  name: 'Closure Factor',\n  param: 'closure_factor',\n  description:\n    \"A factor that penalizes the cost when traversing a closed edge (eg: if search_filter.exclude_closures is false for origin and/or destination location and the route starts/ends on closed edges). Its value can range from 1.0 - don't penalize closed edges, to 10.0 - apply high cost penalty to closed edges. Default value is 9.0\",\n  unit: 'penalty',\n  settings: {\n    min: 1,\n    max: 10,\n    step: 0.5\n  }\n}\n\nconst servicePenalty = {\n  name: 'Service Penalty',\n  param: 'service_penalty',\n  description:\n    'A penalty applied for transition to generic service road. The default penalty is 0 trucks and 15 for cars, buses, motor scooters and motorcycles.',\n  unit: 'penalty',\n  settings: {\n    min: 0,\n    max: 100,\n    step: 5\n  }\n}\n\nconst serviceFactor = {\n  name: 'Service Factor',\n  param: 'service_factor',\n  description:\n    'A factor that modifies (multiplies) the cost when generic service roads are encountered. The default service_factor is 1.',\n  unit: 'factor',\n  settings: {\n    min: 1,\n    max: 50,\n    step: 1\n  }\n}\n\nconst excludeUnpaved = {\n  name: 'Exclude Unpaved',\n  description:\n    'This value indicates the whether or not the path may include unpaved roads. If exclude_unpaved is set to 1 it is allowed to start and end with unpaved roads, but is not allowed to have them in the middle of the route path, otherwise they are allowed.',\n  param: 'exclude_unpaved',\n  unit: 'Yes/No',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 1\n  }\n}\n\nconst shortest = {\n  name: 'Shortest',\n  description:\n    'Changes the metric to quasi-shortest, i.e. purely distance-based costing. Note, this will disable all other costings & penalties. Also note, shortest will not disable hierarchy pruning, leading to potentially sub-optimal routes for some costing models. The default is false.',\n  param: 'shortest'\n}\n\nconst excludeCashOnlyTolls = {\n  name: 'Exclude Cash Only Tolls',\n  description:\n    'A boolean value which indicates the desire to avoid routes with cash-only tolls.',\n  param: 'exclude_cash_only_tolls'\n}\n\nconst useGeocoding = {\n  name: 'Geocoding',\n  description:\n    'Decides whether you want to use geocoding or work with plain coordinates.',\n  param: 'use_geocoding'\n}\n\nconst bicycleType = {\n  name: 'Bicycle Type',\n  description: `The type of bicycle. The default type is Hybrid.\n  Road: a road-style bicycle with narrow tires that is generally lightweight and designed for speed on paved surfaces.\n  Hybrid or City: a bicycle made mostly for city riding or casual riding on roads and paths with good surfaces.\n  Cross: a cyclo-cross bicycle, which is similar to a road bicycle but with wider tires suitable to rougher surfaces.\n  Mountain: a mountain bicycle suitable for most surfaces but generally heavier and slower on paved surfaces.`,\n  param: 'bicycle_type',\n  enums: [\n    {\n      key: 'Hybrid',\n      text: 'Hybrid',\n      value: 'Hybrid'\n    },\n    {\n      key: 'Road',\n      text: 'Road',\n      value: 'Road'\n    },\n    {\n      key: 'City',\n      text: 'City',\n      value: 'City'\n    },\n    {\n      key: 'Cross',\n      text: 'Cross',\n      value: 'Cross'\n    },\n    {\n      key: 'Mountain',\n      text: 'Mountain',\n      value: 'Mountain'\n    }\n  ]\n}\n\nconst cyclingSpeed = {\n  name: 'Cycling Speed',\n  param: 'cycling_speed',\n  description:\n    'Cycling speed is the average travel speed along smooth, flat roads. This is meant to be the speed a rider can comfortably maintain over the desired distance of the route. It can be modified (in the costing method) by surface type in conjunction with bicycle type and (coming soon) by hilliness of the road section. When no speed is specifically provided, the default speed is determined by the bicycle type and are as follows: Road = 25 KPH (15.5 MPH), Cross = 20 KPH (13 MPH), Hybrid/City = 18 KPH (11.5 MPH), and Mountain = 16 KPH (10 MPH).',\n  unit: 'kph',\n  settings: {\n    min: 5,\n    max: 50,\n    step: 1\n  }\n}\n\nconst useRoads = {\n  name: 'Use Roads',\n  param: 'use_roads',\n  description:\n    \"A cyclist's propensity to use roads alongside other vehicles. This is a range of values from 0 to 1, where 0 attempts to avoid roads and stay on cycleways and paths, and 1 indicates the rider is more comfortable riding on roads. Based on the use_roads factor, roads with certain classifications and higher speeds are penalized in an attempt to avoid them when finding the best path. The default value is 0.5.\",\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst useHills = {\n  name: 'Use Hills',\n  param: 'use_hills',\n  description:\n    \"A cyclist's desire to tackle hills in their routes. This is a range of values from 0 to 1, where 0 attempts to avoid hills and steep grades even if it means a longer (time and distance) path, while 1 indicates the rider does not fear hills and steeper grades. Based on the use_hills factor, penalties are applied to roads based on elevation change and grade. These penalties help the path avoid hilly roads in favor of flatter roads or less steep grades where available. Note that it is not always possible to find alternate paths to avoid hills (for example when route locations are in mountainous areas). The default value is 0.5.\",\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst avoidBadSurfaces = {\n  name: 'Avoid Bad Surface',\n  param: 'avoid_bad_surfaces',\n  description:\n    'This value is meant to represent how much a cyclist wants to avoid roads with poor surfaces relative to the bicycle type being used. This is a range of values between 0 and 1. When the value is 0, there is no penalization of roads with different surface types; only bicycle speed on each surface is taken into account. As the value approaches 1, roads with poor surfaces for the bike are penalized heavier so that they are only taken if they significantly improve travel time. When the value is equal to 1, all bad surfaces are completely disallowed from routing, including start and end points. The default value is 0.25.',\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst topSpeed = {\n  name: 'Top Speed',\n  param: 'top_speed',\n  description:\n    'Top speed the vehicle can go. Also used to avoid roads with higher speeds than this value. top_speed must be between 10 and 252 KPH. The default value is 140 KPH.',\n  unit: 'kmh',\n  settings: {\n    min: 10,\n    max: 252,\n    step: 5\n  }\n}\n\nconst usePrimary = {\n  name: 'Use Primary',\n  param: 'use_primary',\n  description:\n    \"A riders's propensity to use primary roads. This is a range of values from 0 to 1, where 0 attempts to avoid primary roads, and 1 indicates the rider is more comfortable riding on primary roads. Based on the use_primary factor, roads with certain classifications and higher speeds are penalized in an attempt to avoid them when finding the best path. The default value is 0.5.\",\n  unit: 'willingness',\n  settings: {\n    min: 0,\n    max: 1,\n    step: 0.1\n  }\n}\n\nconst walkingSpeed = {\n  name: 'Walking Speed',\n  param: 'walking_speed',\n  description:\n    'Walking speed in kilometers per hour. Must be between 0.5 and 25 km/hr. Defaults to 5.1 km/hr (3.1 miles/hour).',\n  unit: 'kmh',\n  settings: {\n    min: 0.5,\n    max: 25,\n    step: 0.1\n  }\n}\n\nconst walkwayFactor = {\n  name: 'Walkway Factor',\n  param: 'walkway_factor',\n  description:\n    'A factor that modifies the cost when encountering roads classified as footway (no motorized vehicles allowed), which may be designated footpaths or designated sidewalks along residential roads. Pedestrian routes generally attempt to favor using these walkways and sidewalks. The default walkway_factor is 1.0.',\n  unit: 'factor',\n  settings: {\n    min: 1,\n    max: 50,\n    step: 1\n  }\n}\n\nconst sidewalkFactor = {\n  name: 'Sidewalk Factor',\n  param: 'sidewalk_factor',\n  description:\n    'A factor that modifies the cost when encountering roads with dedicated sidewalks. Pedestrian routes generally attempt to favor using sidewalks. The default sidewalk_factor is 1.0.',\n  unit: 'factor',\n  settings: {\n    min: 1,\n    max: 50,\n    step: 1\n  }\n}\n\nconst alleyFactor = {\n  name: 'Alley Factor',\n  param: 'alley_factor',\n  description:\n    ' A factor that modifies (multiplies) the cost when alleys are encountered. Pedestrian routes generally want to avoid alleys or narrow service roads between buildings. The default alley_factor is 2.0.',\n  unit: 'factor',\n  settings: {\n    min: 1,\n    max: 50,\n    step: 1\n  }\n}\n\nconst drivewayFactor = {\n  name: 'Driveway Factor',\n  param: 'driveway_factor',\n  description:\n    'A factor that modifies (multiplies) the cost when encountering a driveway, which is often a private, service road. Pedestrian routes generally want to avoid driveways (private). The default driveway factor is 5.0.',\n  unit: 'factor',\n  settings: {\n    min: 1,\n    max: 50,\n    step: 1\n  }\n}\n\nconst stepPenalty = {\n  name: 'Step Penalty',\n  param: 'step_penalty',\n  description:\n    'A penalty in seconds added to each transition onto a path with steps or stairs. Higher values apply larger cost penalties to avoid paths that contain flights of steps.',\n  unit: 'penalty',\n  settings: {\n    min: 0,\n    max: 500,\n    step: 5\n  }\n}\n\nconst maxHikingDifficulty = {\n  name: 'Maximum Hiking Difficulty',\n  param: 'max_hiking_difficulty',\n  description:\n    'This value indicates the maximum difficulty of hiking trails that is allowed. Values between 0 and 6 are allowed. The values correspond to sac_scale values within OpenStreetMap, see reference here. The default value is 1 which means that well cleared trails that are mostly flat or slightly sloped are allowed. Higher difficulty trails can be allowed by specifying a higher value for max_hiking_difficulty.',\n  unit: 'difficulty',\n  settings: {\n    min: 0,\n    max: 6,\n    step: 1\n  }\n}\n\nexport const settingsInit = {\n  maneuver_penalty: 5,\n  country_crossing_penalty: 0,\n  country_crossing_cost: 600,\n  length: 21.5,\n  width: 1.6,\n  height: 1.9,\n  weight: 21.77,\n  axle_load: 9,\n  hazmat: false,\n  use_highways: 1,\n  use_tolls: 1,\n  use_ferry: 1,\n  ferry_cost: 300,\n  use_living_streets: 0.5,\n  use_tracks: 0,\n  private_access_penalty: 450,\n  ignore_closures: false,\n  closure_factor: 9,\n  service_penalty: 15,\n  service_factor: 1,\n  exclude_unpaved: 1,\n  shortest: false,\n  exclude_cash_only_tolls: false,\n  bicycle_type: 'Hybrid',\n  cycling_speed: 20,\n  use_roads: 0.5,\n  use_hills: 0.5,\n  avoid_bad_surfaces: 0.25,\n  top_speed: 140,\n  use_primary: 0.5,\n  walking_speed: 5.1,\n  walkway_factor: 1,\n  sidewalk_factor: 1,\n  alley_factor: 2,\n  driveway_factor: 5,\n  step_penalty: 0,\n  max_hiking_difficulty: 1,\n  exclude_polygons: [],\n  use_geocoding: true\n}\n\nexport const profile_settings = {\n  truck: {\n    numeric: [\n      length,\n      width,\n      weight,\n      height,\n      axleLoad,\n      topSpeed,\n      privateAccessPenalty,\n      closureFactor,\n      servicePenalty,\n      serviceFactor\n    ],\n    boolean: [hazardousMaterials, shortest],\n    enum: []\n  },\n  car: {\n    numeric: [\n      width,\n      height,\n      topSpeed,\n      privateAccessPenalty,\n      closureFactor,\n      servicePenalty,\n      serviceFactor\n    ],\n    boolean: [shortest],\n    enum: []\n  },\n  bus: {\n    numeric: [\n      length,\n      width,\n      weight,\n      height,\n      topSpeed,\n      privateAccessPenalty,\n      closureFactor,\n      servicePenalty,\n      serviceFactor\n    ],\n    boolean: [shortest],\n    enum: []\n  },\n  pedestrian: {\n    numeric: [\n      useHills,\n      walkingSpeed,\n      walkwayFactor,\n      sidewalkFactor,\n      alleyFactor,\n      drivewayFactor,\n      stepPenalty,\n      maxHikingDifficulty\n    ],\n    boolean: [shortest],\n    enum: []\n  },\n  motor_scooter: {\n    numeric: [useHills, topSpeed, usePrimary],\n    boolean: [shortest],\n    enum: []\n  },\n  bicycle: {\n    numeric: [cyclingSpeed, useRoads, useHills, avoidBadSurfaces],\n    boolean: [shortest],\n    enum: [bicycleType]\n  }\n}\n\nexport const settings_general = {\n  truck: {\n    numeric: [\n      turnPenalityCost,\n      countryCrossingPenality,\n      countryCrossingCost,\n      useHighways,\n      useTollways,\n      useFerry,\n      ferryCost,\n      useLivingStreets,\n      useTracks,\n      excludeUnpaved\n    ],\n    boolean: [ignoreClosures, excludeCashOnlyTolls],\n    enum: []\n  },\n  car: {\n    numeric: [\n      turnPenalityCost,\n      countryCrossingPenality,\n      countryCrossingCost,\n      useHighways,\n      useTollways,\n      useFerry,\n      ferryCost,\n      useLivingStreets,\n      useTracks,\n      excludeUnpaved\n    ],\n    boolean: [ignoreClosures, excludeCashOnlyTolls],\n    enum: []\n  },\n  bus: {\n    numeric: [\n      turnPenalityCost,\n      countryCrossingPenality,\n      countryCrossingCost,\n      useHighways,\n      useTollways,\n      useFerry,\n      ferryCost,\n      useTracks,\n      excludeUnpaved\n    ],\n    boolean: [ignoreClosures, excludeCashOnlyTolls],\n    enum: []\n  },\n  pedestrian: {\n    numeric: [useFerry, servicePenalty, serviceFactor],\n    boolean: [],\n    enum: []\n  },\n  motor_scooter: {\n    numeric: [useFerry, useTracks],\n    boolean: [],\n    enum: []\n  },\n  bicycle: {\n    numeric: [\n      useFerry,\n      useLivingStreets,\n      countryCrossingCost,\n      countryCrossingPenality,\n      turnPenalityCost,\n      servicePenalty,\n      serviceFactor\n    ],\n    boolean: [],\n    enum: []\n  },\n  all: {\n    boolean: [useGeocoding]\n  }\n}\n","import {\n  UPDATE_SETTINGS,\n  UPDATE_PROFILE,\n  UPDATE_TAB,\n  LOADING,\n  MESSAGE_HANDLER,\n  SHOW_SETTINGS,\n  ZOOM_TO,\n  RESET_SETTINGS\n} from 'actions/types'\nimport { settingsInit } from 'Controls/settings-options'\n\nconst initialState = {\n  activeTab: 0,\n  showSettings: true,\n  coordinates: [],\n  loading: false,\n  message: {\n    receivedAt: 0,\n    type: null,\n    icon: null,\n    topic: null,\n    description: null\n  },\n  profile: 'bicycle',\n  settings: { ...settingsInit }\n}\n\nexport const common = (state = initialState, action) => {\n  switch (action.type) {\n    case MESSAGE_HANDLER: {\n      return {\n        ...state,\n        message: action.payload\n      }\n    }\n    case LOADING: {\n      return {\n        ...state,\n        loading: action.payload\n      }\n    }\n\n    case ZOOM_TO: {\n      return {\n        ...state,\n        coordinates: action.payload\n      }\n    }\n\n    case SHOW_SETTINGS: {\n      return {\n        ...state,\n        showSettings: !state.showSettings\n      }\n    }\n\n    case UPDATE_SETTINGS: {\n      const { name, value } = action.payload\n      return {\n        ...state,\n        settings: {\n          ...state.settings,\n          [name]: value\n        }\n      }\n    }\n\n    case RESET_SETTINGS: {\n      return {\n        ...state,\n        settings: {\n          ...settingsInit\n        }\n      }\n    }\n\n    case UPDATE_TAB: {\n      const { activeTab } = action.payload\n      return {\n        ...state,\n        activeTab\n      }\n    }\n\n    case UPDATE_PROFILE: {\n      const { profile } = action.payload\n      return {\n        ...state,\n        profile\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","export const decode = (str, precision) => {\n  let index = 0\n  let lat = 0\n  let lng = 0\n  const coordinates = []\n  let shift = 0\n  let result = 0\n  let byte = null\n  let latitude_change\n  let longitude_change\n\n  const factor = Math.pow(10, precision || 6)\n\n  // Coordinates have variable length when encoded, so just keep\n  // track of whether we've hit the end of the string. In each\n  // loop iteration, a single coordinate is decoded.\n  while (index < str.length) {\n    // Reset shift, result, and byte\n    byte = null\n    shift = 0\n    result = 0\n\n    do {\n      byte = str.charCodeAt(index++) - 63\n      result |= (byte & 0x1f) << shift\n      shift += 5\n    } while (byte >= 0x20)\n\n    latitude_change = result & 1 ? ~(result >> 1) : result >> 1\n\n    shift = result = 0\n\n    do {\n      byte = str.charCodeAt(index++) - 63\n      result |= (byte & 0x1f) << shift\n      shift += 5\n    } while (byte >= 0x20)\n\n    longitude_change = result & 1 ? ~(result >> 1) : result >> 1\n\n    lat += latitude_change\n    lng += longitude_change\n\n    coordinates.push([lat / factor, lng / factor])\n  }\n\n  return coordinates\n}\n","import { decode } from './polyline'\n\nexport const { REACT_APP_VALHALLA_OSM_URL } = process.env\nexport const VALHALLA_OSM_URL = REACT_APP_VALHALLA_OSM_URL\n\nexport const buildLocateRequest = (latLng, profile) => {\n  let valhalla_profile = profile\n  if (profile === 'car') {\n    valhalla_profile = 'auto'\n  }\n  return {\n    costing: valhalla_profile,\n    locations: [{ lat: latLng.lat, lon: latLng.lng }]\n  }\n}\n\nexport const buildHeightRequest = latLngs => {\n  const shape = []\n  for (const latLng of latLngs) {\n    shape.push({ lat: latLng[0], lon: latLng[1] })\n  }\n  return {\n    range: latLngs.length > 1,\n    shape,\n    id: 'valhalla_height'\n  }\n}\n\nexport const buildDirectionsRequest = ({\n  profile,\n  activeWaypoints,\n  settings\n}) => {\n  let valhalla_profile = profile\n  if (profile === 'car') {\n    valhalla_profile = 'auto'\n  }\n\n  return {\n    json: {\n      costing: valhalla_profile,\n      costing_options: {\n        [valhalla_profile]: { ...settings }\n      },\n      exclude_polygons: settings.exclude_polygons,\n      locations: makeLocations(activeWaypoints),\n      directions_options: {\n        units: 'kilometers'\n      },\n      id: 'valhalla_directions'\n    }\n  }\n}\n\nexport const parseDirectionsGeometry = data => {\n  const coordinates = []\n\n  for (const feat of data.trip.legs) {\n    coordinates.push(...decode(feat.shape, 6))\n  }\n\n  return coordinates\n}\n\nexport const buildIsochronesRequest = ({\n  profile,\n  center,\n  settings,\n  maxRange,\n  interval\n}) => {\n  let valhalla_profile = profile\n  if (profile === 'car') {\n    valhalla_profile = 'auto'\n  }\n  return {\n    json: {\n      costing: valhalla_profile,\n      costing_options: {\n        [profile]: { ...settings }\n      },\n      contours: makeContours({ maxRange, interval }),\n      locations: makeLocations([center]),\n      directions_options: {\n        units: 'kilometers'\n      },\n      id: `valhalla_isochrones_lonlat_${center.displaylnglat.toString()}_range_${maxRange.toString()}_interval_${interval.toString()}`\n    }\n  }\n}\n\nconst makeContours = ({ maxRange, interval }) => {\n  let contours = []\n  while (maxRange > 0) {\n    contours.push({ time: maxRange })\n    maxRange -= interval\n  }\n  contours = contours.reverse()\n  return contours\n}\n\nconst makeLocations = waypoints => {\n  const locations = []\n  for (const waypoint of waypoints) {\n    locations.push({\n      lon: waypoint.displaylnglat[0],\n      lat: waypoint.displaylnglat[1]\n    })\n  }\n\n  return locations\n}\n","import {\n  ADD_WAYPOINT,\n  INSERT_WAYPOINT,\n  SET_WAYPOINT,\n  CLEAR_WAYPOINTS,\n  EMPTY_WAYPOINT,\n  UPDATE_TEXTINPUT,\n  REQUEST_GEOCODE_RESULTS,\n  RECEIVE_GEOCODE_RESULTS,\n  RECEIVE_ROUTE_RESULTS,\n  CLEAR_ROUTES,\n  TOGGLE_PROVIDER_ISO,\n  HIGHLIGHT_MNV,\n  ZOOM_TO_MNV,\n  UPDATE_INCLINE_DECLINE\n} from 'actions/types'\n\nimport { VALHALLA_OSM_URL } from '../utils/valhalla'\n\nconst initialState = {\n  successful: false,\n  highlightSegment: {\n    startIndex: -1,\n    endIndex: -1\n  },\n  waypoints: [],\n  zoomObj: {\n    index: -1,\n    timeNow: -1\n  },\n  selectedAddresses: '',\n  results: {\n    [VALHALLA_OSM_URL]: {\n      data: {},\n      show: true\n    }\n  }\n}\n\nexport const directions = (state = initialState, action) => {\n  // console.log(action) //eslint-disable-line\n  switch (action.type) {\n    case UPDATE_INCLINE_DECLINE:\n      return {\n        ...state,\n        inclineDeclineTotal: { ...action.payload }\n      }\n\n    case TOGGLE_PROVIDER_ISO:\n      return {\n        ...state,\n        results: {\n          ...state.results,\n          [action.payload.provider]: {\n            ...state.results[action.payload.provider],\n            show: action.payload.show\n          }\n        }\n      }\n\n    case CLEAR_ROUTES:\n      return {\n        ...state,\n        successful: false,\n        inclineDeclineTotal: undefined,\n        results: {\n          ...state.results,\n          [action.payload]: {\n            ...state.results[action.payload],\n            data: {}\n          }\n        }\n      }\n\n    case RECEIVE_ROUTE_RESULTS:\n      return {\n        ...state,\n        inclineDeclineTotal: undefined,\n        results: {\n          ...state.results,\n          [action.payload.provider]: {\n            ...state.results[action.payload.provider],\n            data: action.payload.data\n          }\n        },\n        successful: true\n      }\n\n    case RECEIVE_GEOCODE_RESULTS:\n      return {\n        ...state,\n        waypoints: state.waypoints.map((waypoint, i) =>\n          i === action.payload.index\n            ? {\n                ...waypoint,\n                isFetching: false,\n                geocodeResults: action.payload.addresses\n              }\n            : waypoint\n        )\n      }\n\n    case REQUEST_GEOCODE_RESULTS:\n      return {\n        ...state,\n        waypoints: state.waypoints.map((waypoint, i) =>\n          i === action.payload.index\n            ? { ...waypoint, isFetching: true }\n            : waypoint\n        )\n      }\n\n    case UPDATE_TEXTINPUT:\n      // Catch array of selectedAddress from all waypoints\n      // eslint-disable-next-line no-case-declarations\n      const selectedAddresses = []\n      state.waypoints.map(waypoint => {\n        waypoint.geocodeResults.map((result, i) => {\n          selectedAddresses.push(\n            i === action.payload.addressindex ? waypoint : null\n          )\n        })\n      })\n      return {\n        ...state,\n        selectedAddresses: selectedAddresses,\n        waypoints: state.waypoints.map((waypoint, i) =>\n          i === action.payload.index\n            ? {\n                ...waypoint,\n                userInput: action.payload.inputValue,\n                geocodeResults: waypoint.geocodeResults.map((result, i) =>\n                  i == action.payload.addressindex\n                    ? { ...result, selected: true }\n                    : { ...result, selected: false }\n                )\n              }\n            : waypoint\n        )\n      }\n\n    case CLEAR_WAYPOINTS: {\n      return {\n        ...state,\n        waypoints:\n          action.payload.index >= 0\n            ? state.waypoints.filter((v, i) => i != action.payload.index)\n            : []\n      }\n    }\n\n    case EMPTY_WAYPOINT: {\n      return {\n        ...state,\n        waypoints: state.waypoints.map((waypoint, i) =>\n          i === action.payload.index\n            ? {\n                ...waypoint,\n                userInput: '',\n                geocodeResults: []\n              }\n            : waypoint\n        )\n      }\n    }\n\n    case SET_WAYPOINT: {\n      return {\n        ...state,\n        waypoints: action.payload\n      }\n    }\n\n    case ADD_WAYPOINT: {\n      return {\n        ...state,\n        waypoints: [...state.waypoints, action.payload]\n      }\n    }\n\n    case INSERT_WAYPOINT: {\n      const waypoints = state.waypoints\n      waypoints.splice(waypoints.length - 1, 0, action.payload)\n\n      return {\n        ...state,\n        waypoints: [...waypoints]\n      }\n    }\n\n    case HIGHLIGHT_MNV: {\n      return {\n        ...state,\n        highlightSegment: action.payload\n      }\n    }\n\n    case ZOOM_TO_MNV: {\n      return {\n        ...state,\n        zoomObj: action.payload\n      }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import {\n  RECEIVE_GEOCODE_RESULTS_ISO,\n  REQUEST_GEOCODE_RESULTS_ISO,\n  RECEIVE_ISOCHRONE_RESULTS,\n  UPDATE_SETTINGS_ISO,\n  UPDATE_TEXTINPUT_ISO,\n  TOGGLE_PROVIDER_ISO,\n  CLEAR_ISOS\n} from 'actions/types'\n\nimport { VALHALLA_OSM_URL } from '../utils/valhalla'\n\nconst initialState = {\n  successful: false,\n  userInput: '',\n  isFetching: false,\n  geocodeResults: [],\n  selectedAddress: '',\n  maxRange: 10,\n  interval: 10,\n  results: {\n    [VALHALLA_OSM_URL]: {\n      data: {},\n      show: true\n    }\n  }\n}\n\nexport const isochrones = (state = initialState, action) => {\n  const { type, payload } = action\n  switch (type) {\n    case CLEAR_ISOS:\n      return {\n        ...state,\n        successful: false,\n        userInput: '',\n        geocodeResults: [],\n        selectedAddress: '',\n        results: initialState.results\n      }\n\n    case TOGGLE_PROVIDER_ISO:\n      return {\n        ...state,\n        results: {\n          ...state.results,\n          [action.payload.provider]: {\n            ...state.results[action.payload.provider],\n            show: payload.show\n          }\n        }\n      }\n    case RECEIVE_ISOCHRONE_RESULTS:\n      return {\n        ...state,\n        results: {\n          ...state.results,\n          [action.payload.provider]: {\n            ...state.results[action.payload.provider],\n            data: action.payload.data\n          }\n        },\n        successful: true\n      }\n\n    case UPDATE_SETTINGS_ISO:\n      return {\n        ...state,\n        [payload.maxRangeName]: payload.value,\n        [payload.intervalName]: payload.value\n      }\n\n    case UPDATE_TEXTINPUT_ISO:\n      return {\n        ...state,\n        userInput: payload.userInput,\n        selectedAddress: state.geocodeResults[action.payload.addressindex],\n        geocodeResults: state.geocodeResults.map((result, i) =>\n          i == action.payload.addressindex\n            ? { ...result, selected: true }\n            : { ...result, selected: false }\n        )\n      }\n\n    case RECEIVE_GEOCODE_RESULTS_ISO:\n      return {\n        ...state,\n        geocodeResults: payload,\n        isFetching: false\n      }\n\n    case REQUEST_GEOCODE_RESULTS_ISO:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { common } from './common'\nimport { directions } from './directions'\nimport { isochrones } from './isochrones'\n\nconst rootReducer = combineReducers({\n  common,\n  directions,\n  isochrones\n})\n\nexport default rootReducer\n","export const UPDATE_SETTINGS = 'UPDATE_SETTINGS'\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE'\nexport const ADD_WAYPOINT = 'ADD_WAYPOINT'\nexport const SET_WAYPOINT = 'SET_WAYPOINT'\nexport const CLEAR_WAYPOINTS = 'CLEAR_WAYPOINTS'\nexport const UPDATE_TEXTINPUT = 'UPDATE_TEXTINPUT'\nexport const REQUEST_GEOCODE_RESULTS = 'REQUEST_GEOCODE_RESULTS'\nexport const RECEIVE_GEOCODE_RESULTS = 'RECEIVE_GEOCODE_RESULTS'\nexport const FETCH_GEOCODE = 'FETCH_GEOCODE'\nexport const MESSAGE_HANDLER = 'RESULT_HANDLER'\nexport const UPDATE_TEXTINPUT_ISO = 'UPDATE_TEXTINPUT_ISO'\nexport const REQUEST_GEOCODE_RESULTS_ISO = 'REQUEST_GEOCODE_RESULTS_ISO'\nexport const RECEIVE_GEOCODE_RESULTS_ISO = 'RECEIVE_GEOCODE_RESULTS_ISO'\nexport const UPDATE_SETTINGS_ISO = 'UPDATE_SETTINGS_ISO'\nexport const EMPTY_WAYPOINT = 'EMPTY_WAYPOINT'\nexport const CONSTRUCT_REQUEST = 'CONSTRUCT_REQUEST'\nexport const UPDATE_TAB = 'UPDATE_TAB'\nexport const LOADING = 'LOADING'\nexport const INSERT_WAYPOINT = 'INSERT_WAYPOINT'\nexport const RECEIVE_ROUTE_RESULTS = 'RECEIVE_ROUTE_RESULTS'\nexport const CLEAR_ROUTES = 'CLEAR_ROUTES'\nexport const TOGGLE_PROVIDER_ISO = 'TOGGLE_PROVIDER'\nexport const RECEIVE_ISOCHRONE_RESULTS = 'RECEIVE_ISOCHRONE_RESULTS'\nexport const CLEAR_ISOS = 'CLEAR_ISOS'\nexport const SHOW_SETTINGS = 'SHOW_SETTINGS'\nexport const HIGHLIGHT_MNV = 'HIGHLIGHT_MNV'\nexport const ZOOM_TO_MNV = 'ZOOM_TO_MNV'\nexport const ZOOM_TO = 'ZOOM_TO'\nexport const RESET_SETTINGS = 'RESET_SETTINGS'\nexport const UPDATE_INCLINE_DECLINE = 'UPDATE_INCLINE_DECLINE'\n","/* eslint-disable */\nimport * as L from 'leaflet'\n\nconst ExtraMarkers = {}\n\nExtraMarkers.Icon = L.Icon.extend({\n  options: {\n    iconSize: [35, 45],\n    iconAnchor: [17, 42],\n    popupAnchor: [1, -32],\n    shadowAnchor: [10, 12],\n    shadowSize: [36, 16],\n    className: '',\n    prefix: '',\n    extraClasses: '',\n    shape: 'circle',\n    icon: '',\n    innerHTML: '',\n    markerColor: 'red',\n    svgBorderColor: '#fff',\n    svgOpacity: 1,\n    iconColor: '#fff',\n    number: '',\n    svg: false\n  },\n  initialize: function(options) {\n    options = L.Util.setOptions(this, options)\n  },\n  createIcon: function() {\n    const div = document.createElement('div')\n    const options = this.options\n    if (options.icon) {\n      div.innerHTML = this._createInner()\n    }\n    if (options.innerHTML) {\n      div.innerHTML = options.innerHTML\n    }\n    if (options.bgPos) {\n      div.style.backgroundPosition =\n        -options.bgPos.x + 'px ' + -options.bgPos.y + 'px'\n    }\n    if (!options.svg) {\n      this._setIconStyles(div, options.shape + '-' + options.markerColor)\n    } else {\n      this._setIconStyles(div, 'svg')\n    }\n    return div\n  },\n  _createInner: function() {\n    let iconColorStyle = ''\n    let iconNumber = ''\n    const options = this.options\n    if (options.iconColor) {\n      iconColorStyle = \"style='color: \" + options.iconColor + \"' \"\n    }\n    if (options.number) {\n      iconNumber = \"number='\" + options.number + \"' \"\n    }\n    if (options.svg) {\n      let svg =\n        '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.529271 95.44922\" style=\"fill:' +\n        options.markerColor +\n        ';stroke:' +\n        options.svgBorderColor +\n        ';fill-opacity:' +\n        options.svgOpacity +\n        ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-139.52 -173.21)\"><path d=\"m174.28 173.21c-19.199 0.00035-34.764 15.355-34.764 34.297 0.007 6.7035 1.5591 12.813 5.7461 18.854l0.0234 0.0371 28.979 42.262 28.754-42.107c3.1982-5.8558 5.9163-11.544 6.0275-19.045-0.0001-18.942-15.565-34.298-34.766-34.297z\"/></g></svg>'\n      if (options.shape === 'square') {\n        svg =\n          '<svg xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 69.457038 96.523441\" style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-545.27 -658.39)\"><path d=\"m545.27 658.39v65.301h22.248l12.48 31.223 12.676-31.223h22.053v-65.301h-69.457z\"/></g></svg>'\n      }\n      if (options.shape === 'star') {\n        svg =\n          '<svg style=\"top:0; fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\" xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\" viewBox=\"0 0 77.690999 101.4702\"><g transform=\"translate(-101.15 -162.97)\"><g transform=\"matrix(1 0 0 1.0165 -65.712 -150.28)\"><path d=\"m205.97 308.16-11.561 11.561h-16.346v16.346l-11.197 11.197 11.197 11.197v15.83h15.744l11.615 33.693 11.467-33.568 0.125-0.125h16.346v-16.346l11.197-11.197-11.197-11.197v-15.83h-15.83l-11.561-11.561z\"/></g></g></svg>'\n      }\n      if (options.shape === 'penta') {\n        svg =\n          '<svg style=\"fill:' +\n          options.markerColor +\n          ';stroke:' +\n          options.svgBorderColor +\n          ';fill-opacity:' +\n          options.svgOpacity +\n          ';\"   xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 71.550368 96.362438\" height=\"100%\" width=\"100%\" version=\"1.1\" xmlns:cc=\"http://creativecommons.org/ns#\" xmlns:dc=\"http://purl.org/dc/elements/1.1/\"><g transform=\"translate(-367.08 -289.9)\"><path d=\"m367.08 322.5 17.236-32.604h36.151l18.164 32.25-35.665 64.112z\"/></g></svg>'\n      }\n      return (\n        svg +\n        '<i ' +\n        iconNumber +\n        iconColorStyle +\n        \"class='\" +\n        options.extraClasses +\n        ' ' +\n        options.prefix +\n        ' ' +\n        options.icon +\n        \"'></i>\"\n      )\n    }\n    return (\n      '<i ' +\n      iconNumber +\n      iconColorStyle +\n      \"class='\" +\n      options.extraClasses +\n      ' ' +\n      options.prefix +\n      ' ' +\n      options.icon +\n      \"'></i>\"\n    )\n  },\n  _setIconStyles: function(img, name) {\n    const options = this.options\n    const size = L.point(options[name === 'shadow' ? 'shadowSize' : 'iconSize'])\n    let anchor\n    let leafletName\n    if (name === 'shadow') {\n      anchor = L.point(options.shadowAnchor || options.iconAnchor)\n      leafletName = 'shadow'\n    } else {\n      anchor = L.point(options.iconAnchor)\n      leafletName = 'icon'\n    }\n    if (!anchor && size) {\n      anchor = size.divideBy(2, true)\n    }\n\n    img.className =\n      'leaflet-marker-' +\n      leafletName +\n      ' extra-marker extra-marker-' +\n      name +\n      ' ' +\n      options.className\n    if (anchor) {\n      img.style.marginLeft = -anchor.x + 'px'\n      img.style.marginTop = -anchor.y + 'px'\n    }\n    if (size) {\n      img.style.width = size.x + 'px'\n      img.style.height = size.y + 'px'\n    }\n  },\n  createShadow: function() {\n    const div = document.createElement('div')\n    this._setIconStyles(div, 'shadow')\n    return div\n  }\n})\n\nExtraMarkers.icon = function(options) {\n  return new ExtraMarkers.Icon(options)\n}\n\nexport default ExtraMarkers\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgBus = function SvgBus(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M20 6V4C20 3.46957 19.7893 2.96086 19.4142 2.58579C19.0391 2.21071 18.5304 2 18 2H6C5.46957 2 4.96086 2.21071 4.58579 2.58579C4.21071 2.96086 4 3.46957 4 4V6H2V10H4V20C4 20.5304 4.21071 21.0391 4.58579 21.4142C4.96086 21.7893 5.46957 22 6 22H9C9.26522 22 9.51957 21.8946 9.70711 21.7071C9.89464 21.5196 10 21.2652 10 21V20H14V21C14 21.2652 14.1054 21.5196 14.2929 21.7071C14.4804 21.8946 14.7348 22 15 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V10H22V6H20ZM10 18H6V16H10V18ZM18 18H14V16H18V18ZM18 14H6V8H18V14ZM18 6H6V4H18V6Z\",\n    fill: \"#00000099\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBus, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/bus.4f4b6969.svg\";\nexport { ForwardRef as ReactComponent };","import axios from 'axios'\n\nexport const { REACT_APP_NOMINATIM_URL } = process.env\nexport const { REACT_APP_NOMINATIME_URL_REVERSE } = process.env\n\nexport const NOMINATIM_URL = REACT_APP_NOMINATIM_URL\nexport const NOMINATIME_URL_REVERSE = REACT_APP_NOMINATIME_URL_REVERSE\n\nexport const forward_geocode = userInput =>\n  axios.get(NOMINATIM_URL, {\n    params: {\n      // eslint-disable-next-line\n      q: userInput,\n      format: 'json',\n      limit: 5\n    }\n  })\n\nexport const reverse_geocode = (lon, lat) =>\n  axios.get(NOMINATIME_URL_REVERSE, {\n    params: {\n      lon: lon,\n      lat: lat,\n      format: 'json'\n    }\n  })\n\nexport const parseGeocodeResponse = (results, lngLat) => {\n  if (!(Object.prototype.toString.call(results) === '[object Array]')) {\n    results = [results]\n  }\n  const processedResults = []\n  for (const [index, result] of results.entries()) {\n    if (\n      'error' in result &&\n      result.error.toLowerCase() == 'unable to geocode'\n    ) {\n      processedResults.push({\n        title: lngLat.toString(),\n        description: '',\n        selected: true,\n        addresslnglat: '',\n        sourcelnglat: lngLat,\n        displaylnglat: lngLat,\n        key: index,\n        addressindex: index\n      })\n    } else {\n      processedResults.push({\n        title:\n          result.display_name.length > 0\n            ? result.display_name\n            : lngLat.toString(),\n        description: `https://www.openstreetmap.org/${result.osm_type}/${\n          result.osm_id\n        }`,\n        selected: false,\n        addresslnglat: [parseFloat(result.lon), parseFloat(result.lat)],\n        sourcelnglat:\n          lngLat == undefined\n            ? [parseFloat(result.lon), parseFloat(result.lat)]\n            : lngLat,\n        displaylnglat:\n          lngLat !== undefined\n            ? lngLat\n            : [parseFloat(result.lon), parseFloat(result.lat)],\n        key: index,\n        addressindex: index\n      })\n    }\n  }\n  return processedResults\n}\n","import {\n  MESSAGE_HANDLER,\n  UPDATE_PROFILE,\n  UPDATE_SETTINGS,\n  UPDATE_TAB,\n  LOADING,\n  SHOW_SETTINGS,\n  ZOOM_TO,\n  RESET_SETTINGS\n} from './types'\n\nimport {\n  profile_settings,\n  settings_general\n} from '../Controls/settings-options'\n\nexport const showLoading = loading => ({\n  type: LOADING,\n  payload: loading\n})\nexport const sendMessage = message_object => ({\n  type: MESSAGE_HANDLER,\n  payload: {\n    receivedAt: Date.now(),\n    ...message_object\n  }\n})\nexport const updateSettings = object => ({\n  type: UPDATE_SETTINGS,\n  payload: object\n})\nexport const updateProfile = profile => ({\n  type: UPDATE_PROFILE,\n  payload: profile\n})\nexport const updateTab = activeTab => ({\n  type: UPDATE_TAB,\n  payload: activeTab\n})\n\nexport const doShowSettings = () => ({\n  type: SHOW_SETTINGS\n})\n\nexport const resetSettings = () => ({\n  type: RESET_SETTINGS\n})\n\nexport const zoomTo = coords => ({\n  type: ZOOM_TO,\n  payload: coords\n})\n\nexport const updatePermalink = () => (dispatch, getState) => {\n  const { waypoints } = getState().directions\n  const { geocodeResults, maxRange, interval } = getState().isochrones\n  const { profile, /*settings,*/ activeTab } = getState().common\n  const queryParams = new URLSearchParams()\n  queryParams.set('profile', profile)\n\n  let path = '/directions?'\n  if (activeTab == 0) {\n    const wps = []\n    for (const wp of waypoints) {\n      for (const result of wp.geocodeResults) {\n        if (result.selected) {\n          wps.push(result.sourcelnglat)\n        }\n      }\n    }\n    if (wps.length > 0) queryParams.set('wps', wps.toString())\n  } else {\n    path = '/isochrones?'\n\n    let center\n    for (const result of geocodeResults) {\n      if (result.selected) {\n        center = result.sourcelnglat.toString()\n      }\n    }\n    if (center) {\n      queryParams.set('wps', center.toString())\n    }\n    queryParams.set('range', maxRange)\n    queryParams.set('interval', interval)\n  }\n  window.history.replaceState(null, null, path + queryParams.toString())\n}\n\nexport const downloadFile = ({ data, fileName, fileType }) => {\n  // Create a blob with the data we want to download as a file\n  const blob = new Blob([data], { type: fileType })\n  // Create an anchor element and dispatch a click event on it\n  // to trigger a download\n  const aElem = document.createElement('a')\n  aElem.download = fileName\n  aElem.href = window.URL.createObjectURL(blob)\n  const clickEvt = new MouseEvent('click', {\n    view: window,\n    bubbles: true,\n    cancelable: true\n  })\n  aElem.dispatchEvent(clickEvt)\n  aElem.remove()\n}\n\nexport const filterProfileSettings = (profile, settings) => {\n  const filteredSettings = {\n    exclude_polygons: settings.exclude_polygons\n  }\n  for (const setting in settings) {\n    for (const item of settings_general[profile].numeric) {\n      if (setting == item.param) {\n        filteredSettings[setting] = settings[setting]\n      }\n    }\n    for (const item of settings_general[profile].boolean) {\n      if (setting == item.param) {\n        filteredSettings[setting] = settings[setting]\n      }\n    }\n    for (const item of settings_general[profile].enum) {\n      if (setting == item.param) {\n        filteredSettings[setting] = settings[setting]\n      }\n    }\n\n    for (const item of profile_settings[profile].numeric) {\n      if (setting == item.param) {\n        filteredSettings[setting] = settings[setting]\n      }\n    }\n\n    for (const item of profile_settings[profile].boolean) {\n      if (setting == item.param) {\n        filteredSettings[setting] = settings[setting]\n      }\n    }\n    for (const item of profile_settings[profile].enum) {\n      if (setting == item.param) {\n        filteredSettings[setting] = settings[setting]\n      }\n    }\n  }\n  return filteredSettings\n}\n","import axios from 'axios'\nimport {\n  ADD_WAYPOINT,\n  CLEAR_WAYPOINTS,\n  RECEIVE_GEOCODE_RESULTS,\n  REQUEST_GEOCODE_RESULTS,\n  SET_WAYPOINT,\n  UPDATE_TEXTINPUT,\n  EMPTY_WAYPOINT,\n  INSERT_WAYPOINT,\n  RECEIVE_ROUTE_RESULTS,\n  CLEAR_ROUTES,\n  TOGGLE_PROVIDER_ISO,\n  HIGHLIGHT_MNV,\n  ZOOM_TO_MNV,\n  UPDATE_INCLINE_DECLINE\n} from './types'\nimport {\n  reverse_geocode,\n  forward_geocode,\n  parseGeocodeResponse\n} from 'utils/nominatim'\nimport {\n  VALHALLA_OSM_URL,\n  buildDirectionsRequest,\n  parseDirectionsGeometry\n} from 'utils/valhalla'\n\nimport {\n  sendMessage,\n  showLoading,\n  filterProfileSettings,\n  updatePermalink,\n  zoomTo\n} from './commonActions'\n\nconst serverMapping = {\n  [VALHALLA_OSM_URL]: 'OSM'\n}\n\nexport const makeRequest = () => (dispatch, getState) => {\n  dispatch(updatePermalink())\n  const { waypoints } = getState().directions\n  const { profile } = getState().common\n  let { settings } = getState().common\n  // if 2 results are selected\n  const activeWaypoints = getActiveWaypoints(waypoints)\n  if (activeWaypoints.length >= 2) {\n    settings = filterProfileSettings(profile, settings)\n\n    const valhallaRequest = buildDirectionsRequest({\n      profile,\n      activeWaypoints,\n      settings\n    })\n    dispatch(fetchValhallaDirections(valhallaRequest))\n  }\n}\n\nconst getActiveWaypoints = waypoints => {\n  const activeWaypoints = []\n  for (const waypoint of waypoints) {\n    if (waypoint.geocodeResults.length > 0) {\n      for (const result of waypoint.geocodeResults) {\n        if (result.hasOwnProperty('selected') && result.selected) {\n          activeWaypoints.push(result)\n          break\n        }\n      }\n    }\n  }\n  return activeWaypoints\n}\n\nconst fetchValhallaDirections = valhallaRequest => (dispatch, getState) => {\n  dispatch(showLoading(true))\n\n  axios\n    .get(VALHALLA_OSM_URL + '/route', {\n      params: valhallaRequest,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(({ data }) => {\n      data.decodedGeometry = parseDirectionsGeometry(data)\n      dispatch(registerRouteResponse(VALHALLA_OSM_URL, data))\n      dispatch(zoomTo(data.decodedGeometry))\n    })\n    .catch(({ response }) => {\n      let error_msg = response.data.error\n      if (response.data.error_code === 154) {\n        error_msg += ` for ${valhallaRequest.json.costing}.`\n      }\n      dispatch(clearRoutes(VALHALLA_OSM_URL))\n      dispatch(\n        sendMessage({\n          type: 'warning',\n          icon: 'warning',\n          description: `${serverMapping[VALHALLA_OSM_URL]}: ${error_msg}`,\n          title: `${response.data.status}`\n        })\n      )\n    })\n    .finally(() => {\n      setTimeout(() => {\n        dispatch(showLoading(false))\n      }, 500)\n    })\n}\n\nexport const registerRouteResponse = (provider, data) => ({\n  type: RECEIVE_ROUTE_RESULTS,\n  payload: {\n    provider,\n    data\n  }\n})\n\nexport const clearRoutes = provider => ({\n  type: CLEAR_ROUTES,\n  payload: provider\n})\n\nconst placeholderAddress = (index, lng, lat) => dispatch => {\n  // placeholder until geocoder is complete\n  // will add latLng to input field\n  const addresses = [\n    {\n      title: '',\n      displaylnglat: [lng, lat],\n      key: index,\n      addressindex: index\n    }\n  ]\n  dispatch(receiveGeocodeResults({ addresses, index: index }))\n  dispatch(\n    updateTextInput({\n      inputValue: [lng.toFixed(6), lat.toFixed(6)].join(', '),\n      index: index,\n      addressindex: 0\n    })\n  )\n}\n\nexport const fetchReverseGeocodePerma = object => (dispatch, getState) => {\n  dispatch(requestGeocodeResults({ index: object.index, reverse: true }))\n\n  const { index } = object\n  const { permaLast } = object\n  const { lng, lat } = object.latLng\n\n  if (index > 1) dispatch(doAddWaypoint(true, permaLast))\n\n  reverse_geocode(lng, lat)\n    .then(response => {\n      dispatch(\n        processGeocodeResponse(\n          response.data,\n          index,\n          true,\n          [lng, lat],\n          permaLast\n        )\n      )\n    })\n    .catch(error => {\n      console.log(error) //eslint-disable-line\n    })\n  // .finally(() => {\n  //   // always executed\n  // })\n}\n\nexport const fetchReverseGeocode = object => (dispatch, getState) => {\n  //dispatch(requestGeocodeResults({ index: object.index, reverse: true }))\n  const { waypoints } = getState().directions\n\n  let { index } = object\n  const { fromDrag } = object\n  const { lng, lat } = object.latLng\n\n  if (index === -1) {\n    index = waypoints.length - 1\n  } else if (index === 1 && !fromDrag) {\n    // insert waypoint from context menu\n    dispatch(doAddWaypoint(true))\n\n    index = waypoints.length - 2\n  }\n\n  dispatch(placeholderAddress(index, lng, lat))\n\n  dispatch(requestGeocodeResults({ index, reverse: true }))\n\n  reverse_geocode(lng, lat)\n    .then(response => {\n      dispatch(processGeocodeResponse(response.data, index, true, [lng, lat]))\n    })\n    .catch(error => {\n      console.log(error) //eslint-disable-line\n    })\n  // .finally(() => {\n  //   // always executed\n  // })\n}\n\nexport const fetchGeocode = object => dispatch => {\n  if (object.hasOwnProperty('lngLat')) {\n    const addresses = [\n      {\n        title: object.lngLat.toString(),\n        description: '',\n        selected: false,\n        addresslnglat: object.lngLat,\n        sourcelnglat: object.lngLat,\n        displaylnglat: object.lngLat,\n        key: object.index,\n        addressindex: 0\n      }\n    ]\n    dispatch(receiveGeocodeResults({ addresses, index: object.index }))\n  } else {\n    dispatch(requestGeocodeResults({ index: object.index }))\n\n    forward_geocode(object.inputValue)\n      .then(response => {\n        dispatch(processGeocodeResponse(response.data, object.index))\n      })\n      .catch(error => {\n        console.log(error) //eslint-disable-line\n      })\n      .finally(() => {})\n  }\n}\n\nconst processGeocodeResponse = (\n  data,\n  index,\n  reverse,\n  lngLat,\n  permaLast\n) => dispatch => {\n  const addresses = parseGeocodeResponse(data, lngLat)\n  // if no address can be found\n  if (addresses.length === 0) {\n    dispatch(\n      sendMessage({\n        type: 'warning',\n        icon: 'warning',\n        description: 'Sorry, no addresses can be found.',\n        title: 'No addresses'\n      })\n    )\n    // for (const results of document.getElementsByClassName('results')) {\n    //   results.classList.remove('visible')\n    // }\n  }\n  dispatch(receiveGeocodeResults({ addresses, index }))\n\n  if (reverse) {\n    dispatch(\n      updateTextInput({\n        inputValue: addresses[0].title,\n        index: index,\n        addressindex: 0\n      })\n    )\n    if (permaLast == undefined) {\n      dispatch(makeRequest())\n      dispatch(updatePermalink())\n    } else if (permaLast) {\n      dispatch(makeRequest())\n      dispatch(updatePermalink())\n    }\n  }\n}\n\nexport const receiveGeocodeResults = object => ({\n  type: RECEIVE_GEOCODE_RESULTS,\n  payload: object\n})\n\nexport const requestGeocodeResults = object => ({\n  type: REQUEST_GEOCODE_RESULTS,\n  payload: object\n})\n\nexport const updateTextInput = object => ({\n  type: UPDATE_TEXTINPUT,\n  payload: object\n})\n\nexport const doRemoveWaypoint = index => (dispatch, getState) => {\n  if (index === undefined) {\n    dispatch(clearWaypoints())\n    Array(2)\n      .fill()\n      .map((_, i) => dispatch(doAddWaypoint()))\n  } else {\n    let waypoints = getState().directions.waypoints\n    if (waypoints.length > 2) {\n      dispatch(clearWaypoints(index))\n      dispatch(makeRequest())\n    } else {\n      dispatch(emptyWaypoint(index))\n    }\n    waypoints = getState().directions.waypoints\n    if (getActiveWaypoints(waypoints).length < 2) {\n      dispatch(clearRoutes(VALHALLA_OSM_URL))\n    }\n  }\n  dispatch(updatePermalink())\n}\n\nexport const highlightManeuver = fromTo => (dispatch, getState) => {\n  const highlightSegment = getState().directions.highlightSegment\n  // this is dehighlighting\n  if (\n    highlightSegment.startIndex === fromTo.startIndex &&\n    highlightSegment.endIndex === fromTo.endIndex\n  ) {\n    fromTo.startIndex = -1\n    fromTo.endIndex = -1\n  }\n\n  dispatch({\n    type: HIGHLIGHT_MNV,\n    payload: fromTo\n  })\n}\n\nexport const zoomToManeuver = zoomObj => ({\n  type: ZOOM_TO_MNV,\n  payload: zoomObj\n})\n\nexport const clearWaypoints = index => ({\n  type: CLEAR_WAYPOINTS,\n  payload: { index: index }\n})\n\nexport const emptyWaypoint = index => ({\n  type: EMPTY_WAYPOINT,\n  payload: { index: index }\n})\n\nexport const updateInclineDeclineTotal = object => ({\n  type: UPDATE_INCLINE_DECLINE,\n  payload: object\n})\n\nexport const doAddWaypoint = doInsert => (dispatch, getState) => {\n  const waypoints = getState().directions.waypoints\n  let maxIndex = Math.max.apply(\n    Math,\n    waypoints.map(wp => {\n      return wp.id\n    })\n  )\n  maxIndex = isFinite(maxIndex) === false ? 0 : maxIndex + 1\n\n  const emptyWp = {\n    id: maxIndex.toString(),\n    geocodeResults: [],\n    isFetching: false,\n    userInput: ''\n  }\n  if (doInsert) {\n    dispatch(insertWaypoint(emptyWp))\n  } else {\n    dispatch(addWaypoint(emptyWp))\n  }\n}\n\nconst insertWaypoint = waypoint => ({\n  type: INSERT_WAYPOINT,\n  payload: waypoint\n})\n\nexport const addWaypoint = waypoint => ({\n  type: ADD_WAYPOINT,\n  payload: waypoint\n})\n\nexport const setWaypoints = waypoints => ({\n  type: SET_WAYPOINT,\n  payload: waypoints\n})\n\nexport const showProvider = (provider, show) => ({\n  type: TOGGLE_PROVIDER_ISO,\n  payload: {\n    provider,\n    show\n  }\n})\n","import * as turf from '@turf/turf'\n\nexport const calcArea = feature => {\n  try {\n    const polygon = turf.polygon([feature.geometry.coordinates])\n    return turf.area(polygon) / 1000000\n  } catch (e) {\n    return -1\n  }\n}\n\nexport const isValidCoordinates = (lat, lng) => {\n  const ck_lat = /^(-?[1-8]?\\d(?:\\.\\d{1,18})?|90(?:\\.0{1,18})?)$/\n  const ck_lng = /^(-?(?:1[0-7]|[1-9])?\\d(?:\\.\\d{1,18})?|180(?:\\.0{1,18})?)$/\n  const validLat = ck_lat.test(lat)\n  const validLon = ck_lng.test(lng)\n  return validLat && validLon\n}\n","import axios from 'axios'\nimport {\n  UPDATE_TEXTINPUT_ISO,\n  UPDATE_SETTINGS_ISO,\n  RECEIVE_GEOCODE_RESULTS_ISO,\n  REQUEST_GEOCODE_RESULTS_ISO,\n  TOGGLE_PROVIDER_ISO,\n  RECEIVE_ISOCHRONE_RESULTS,\n  CLEAR_ISOS\n} from './types'\nimport {\n  reverse_geocode,\n  forward_geocode,\n  parseGeocodeResponse\n} from 'utils/nominatim'\nimport { VALHALLA_OSM_URL, buildIsochronesRequest } from 'utils/valhalla'\n\nimport {\n  sendMessage,\n  showLoading,\n  updatePermalink,\n  filterProfileSettings\n} from './commonActions'\nimport { calcArea } from 'utils/geom'\n\nconst serverMapping = {\n  [VALHALLA_OSM_URL]: 'OSM'\n}\n\nexport const makeIsochronesRequest = () => (dispatch, getState) => {\n  const { geocodeResults, maxRange, interval } = getState().isochrones\n  const { profile } = getState().common\n  let { settings } = getState().common\n\n  settings = filterProfileSettings(profile, settings)\n\n  // console.log(settings)\n\n  // if center is selected\n  let center = undefined\n  if (geocodeResults.length > 0) {\n    for (const result of geocodeResults) {\n      if (result.hasOwnProperty('selected') && result.selected) {\n        center = result\n        break\n      }\n    }\n  }\n\n  if (center !== undefined) {\n    const valhallaRequest = buildIsochronesRequest({\n      profile,\n      center,\n      settings,\n      maxRange,\n      interval\n    })\n    dispatch(fetchValhallaIsochrones(valhallaRequest))\n  }\n}\n\nconst fetchValhallaIsochrones = valhallaRequest => (dispatch, getState) => {\n  dispatch(showLoading(true))\n\n  for (const URL of [VALHALLA_OSM_URL]) {\n    axios\n      .get(URL + '/isochrone', {\n        params: valhallaRequest,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(({ data }) => {\n        data.features.forEach(feature => {\n          feature.properties.area = calcArea(feature)\n        })\n        dispatch(registerIsoResponse(URL, data))\n      })\n      .catch(({ response }) => {\n        dispatch(registerIsoResponse(URL, []))\n        dispatch(\n          sendMessage({\n            type: 'warning',\n            icon: 'warning',\n            description: `${serverMapping[URL]}: ${response.data.error}`,\n            title: `${response.data.status}`\n          })\n        )\n      })\n      .finally(() => {\n        setTimeout(() => {\n          dispatch(showLoading(false))\n        }, 500)\n      })\n  }\n}\n\nexport const clearIsos = provider => ({\n  type: CLEAR_ISOS,\n  payload: provider\n})\n\nexport const registerIsoResponse = (provider, data) => ({\n  type: RECEIVE_ISOCHRONE_RESULTS,\n  payload: {\n    provider,\n    data\n  }\n})\n\nexport const updateTextInput = obj => ({\n  type: UPDATE_TEXTINPUT_ISO,\n  payload: obj\n})\n\nexport const updateIsoSettings = obj => ({\n  type: UPDATE_SETTINGS_ISO,\n  payload: obj\n})\n\nconst placeholderAddress = (index, lng, lat) => dispatch => {\n  // placeholder until gecoder is complete\n  // will add latLng to input field\n  const addresses = [\n    {\n      selected: false,\n      title: '',\n      displaylnglat: [lng, lat],\n      key: index,\n      addressindex: index\n    }\n  ]\n\n  dispatch({\n    type: RECEIVE_GEOCODE_RESULTS_ISO,\n    payload: addresses\n  })\n  dispatch({\n    type: UPDATE_TEXTINPUT_ISO,\n    payload: {\n      userInput: [lng.toFixed(6), lat.toFixed(6)].join(', '),\n      index: 0,\n      addressindex: 0\n    }\n  })\n}\n\nexport const fetchReverseGeocodeIso = (lng, lat) => dispatch => {\n  dispatch(placeholderAddress(0, lng, lat))\n\n  dispatch({\n    type: REQUEST_GEOCODE_RESULTS_ISO\n  })\n  reverse_geocode(lng, lat)\n    .then(response => {\n      dispatch(processGeocodeResponse(response.data, true, [lng, lat]))\n    })\n    .catch(error => {\n      console.log(error) //eslint-disable-line\n    })\n  // .finally(() => {\n  //   // always executed\n  // })\n}\n\nexport const fetchGeocode = (userInput, lngLat) => dispatch => {\n  dispatch({\n    type: REQUEST_GEOCODE_RESULTS_ISO\n  })\n\n  if (lngLat) {\n    const addresses = [\n      {\n        title: lngLat.toString(),\n        description: '',\n        selected: false,\n        addresslnglat: lngLat,\n        sourcelnglat: lngLat,\n        displaylnglat: lngLat,\n        addressindex: 0\n      }\n    ]\n\n    dispatch({\n      type: RECEIVE_GEOCODE_RESULTS_ISO,\n      payload: addresses\n    })\n  } else {\n    forward_geocode(userInput)\n      .then(response => {\n        dispatch(processGeocodeResponse(response.data))\n      })\n      .catch(error => {\n        console.log(error) //eslint-disable-line\n      })\n  }\n}\n\nconst processGeocodeResponse = (data, reverse, lngLat) => dispatch => {\n  const addresses = parseGeocodeResponse(data, lngLat)\n  // if no address can be found\n  if (addresses.length === 0) {\n    dispatch(\n      sendMessage({\n        type: 'warning',\n        icon: 'warning',\n        description: 'Sorry, no addresses can be found.',\n        title: 'No addresses'\n      })\n    )\n  }\n  dispatch({\n    type: RECEIVE_GEOCODE_RESULTS_ISO,\n    payload: addresses\n  })\n\n  if (reverse) {\n    dispatch({\n      type: UPDATE_TEXTINPUT_ISO,\n      payload: {\n        userInput: addresses[0].title,\n        index: 0,\n        addressindex: 0\n      }\n    })\n    dispatch(updatePermalink())\n    dispatch(makeIsochronesRequest())\n  }\n}\n\nexport const showProvider = (provider, show) => ({\n  type: TOGGLE_PROVIDER_ISO,\n  payload: {\n    provider,\n    show\n  }\n})\n","const deriveHeightClass = slope => {\n  let heightClass\n  switch (true) {\n    case slope < -15:\n      heightClass = -5\n      break\n    case -15 <= slope && -10 > slope:\n      heightClass = -4\n      break\n    case -10 <= slope && -7 > slope:\n      heightClass = -3\n      break\n    case -7 <= slope && -4 > slope:\n      heightClass = -2\n      break\n    case -4 <= slope && -1 > slope:\n      heightClass = -1\n      break\n    case -1 <= slope && 1 > slope:\n      heightClass = 0\n      break\n    case 1 <= slope && 3 > slope:\n      heightClass = 1\n      break\n    case 3 <= slope && 6 > slope:\n      heightClass = 2\n      break\n    case 6 <= slope && 9 > slope:\n      heightClass = 3\n      break\n    case 9 <= slope && 15 > slope:\n      heightClass = 4\n      break\n    case slope >= 15:\n      heightClass = 5\n      break\n    default:\n      break\n  }\n  return heightClass\n}\n\nexport const buildHeightgraphData = (coordinates, rangeHeightData) => {\n  const features = []\n\n  let LineStringCoordinates = []\n  const heightClasses = []\n\n  let inclineTotal = 0\n  let declineTotal = 0\n\n  rangeHeightData.forEach((item, index) => {\n    //console.log(\"Current: \" + item.name);\n    if (index < rangeHeightData.length - 1) {\n      const riseThis = item[1]\n      const riseNext = rangeHeightData[index + 1][1]\n      const rise = riseNext - riseThis\n      const run = rangeHeightData[index + 1][0] - item[0]\n\n      const slope = (rise / run) * 100\n      const heightClass = isNaN(slope) ? 0 : deriveHeightClass(slope)\n\n      if (rise > 0) {\n        inclineTotal += rise\n      } else if (rise < 0) {\n        declineTotal += rise * -1\n      }\n\n      LineStringCoordinates.push([\n        coordinates[index][0],\n        coordinates[index][1],\n        item[1]\n      ])\n\n      if (heightClasses[heightClasses.length - 1] !== heightClass) {\n        LineStringCoordinates.push([\n          coordinates[index + 1][0],\n          coordinates[index + 1][1],\n          rangeHeightData[index + 1][1]\n        ])\n\n        features.push({\n          type: 'Feature',\n          geometry: {\n            type: 'LineString',\n            coordinates: LineStringCoordinates\n          },\n          properties: {\n            attributeType: heightClass\n          }\n        })\n        LineStringCoordinates = []\n      }\n      heightClasses.push(heightClass)\n    }\n  })\n\n  return [\n    {\n      type: 'FeatureCollection',\n      features: features,\n      properties: {\n        summary: 'steepness',\n        inclineTotal,\n        declineTotal\n      }\n    }\n  ]\n}\n\nexport const colorMappings = {\n  steepness: {\n    '-5': {\n      text: '16%+',\n      color: '#028306'\n    },\n    '-4': {\n      text: '10-15%',\n      color: '#2AA12E'\n    },\n    '-3': {\n      text: '7-9%',\n      color: '#53BF56'\n    },\n    '-2': {\n      text: '4-6%',\n      color: '#7BDD7E'\n    },\n    '-1': {\n      text: '1-3%',\n      color: '#A4FBA6'\n    },\n    '0': {\n      text: '0%',\n      color: '#ffcc99'\n    },\n    '1': {\n      text: '1-3%',\n      color: '#F29898'\n    },\n    '2': {\n      text: '4-6%',\n      color: '#E07575'\n    },\n    '3': {\n      text: '7-9%',\n      color: '#CF5352'\n    },\n    '4': {\n      text: '10-15%',\n      color: '#BE312F'\n    },\n    '5': {\n      text: '16%+',\n      color: '#AD0F0C'\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport L from 'leaflet'\nimport * as $ from 'jquery'\nimport 'jquery-ui-bundle'\nimport 'jquery-ui-bundle/jquery-ui.css'\n\nimport '@geoman-io/leaflet-geoman-free'\nimport '@geoman-io/leaflet-geoman-free/dist/leaflet-geoman.css'\nimport 'leaflet.heightgraph'\nimport 'leaflet.heightgraph/dist/L.Control.Heightgraph.min.css'\n\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\n\nimport * as R from 'ramda'\nimport ExtraMarkers from './extraMarkers'\nimport { Button, Label, Icon, Popup } from 'semantic-ui-react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport {\n  fetchReverseGeocode,\n  updateInclineDeclineTotal\n} from 'actions/directionsActions'\nimport { fetchReverseGeocodeIso } from 'actions/isochronesActions'\nimport { updateSettings } from 'actions/commonActions'\nimport {\n  VALHALLA_OSM_URL,\n  buildHeightRequest,\n  buildLocateRequest\n} from 'utils/valhalla'\nimport { colorMappings, buildHeightgraphData } from 'utils/heightgraph'\n\nconst OSMTiles = L.tileLayer(\n  'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n  {\n    attribution:\n      '<a href=\"https://map.project-osrm.org/about.html\" target=\"_blank\">About this service and privacy policy</a> | &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n  }\n)\n\n// defining the container styles the map sits in\nconst style = {\n  width: '100%',\n  height: '100vh'\n}\n\nconst convertDDToDMS = decimalDegrees =>\n  [\n    0 | decimalDegrees,\n    '° ',\n    0 |\n      (((decimalDegrees =\n        (decimalDegrees < 0 ? -decimalDegrees : decimalDegrees) + 1e-4) %\n        1) *\n        60),\n    \"' \",\n    0 | (((decimalDegrees * 60) % 1) * 60),\n    '\"'\n  ].join('')\n\n// for this app we create two leaflet layer groups to control, one for the isochrone centers and one for the isochrone contours\nconst isoCenterLayer = L.featureGroup()\nconst isoPolygonLayer = L.featureGroup()\nconst routeMarkersLayer = L.featureGroup()\nconst routeLineStringLayer = L.featureGroup()\nconst highlightRouteSegmentlayer = L.featureGroup()\nconst highlightRouteIndexLayer = L.featureGroup()\nconst excludePolygonsLayer = L.featureGroup()\n\n// a leaflet map consumes parameters, I'd say they are quite self-explanatory\nconst mapParams = {\n  center: [48.209346, 16.372719],\n  zoomControl: false,\n  zoom: 10,\n  maxZoom: 18,\n  minZoom: 3,\n  layers: [\n    isoCenterLayer,\n    routeMarkersLayer,\n    isoPolygonLayer,\n    routeLineStringLayer,\n    highlightRouteSegmentlayer,\n    highlightRouteIndexLayer,\n    excludePolygonsLayer,\n    OSMTiles\n  ]\n}\n\nconst routeObjects = {\n  [VALHALLA_OSM_URL]: {\n    color: '#cc0000',\n    name: 'OSM'\n  }\n}\n\n// this you have seen before, we define a react component\nclass Map extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    directions: PropTypes.object,\n    isochrones: PropTypes.object,\n    profile: PropTypes.string,\n    activeTab: PropTypes.number,\n    activeDataset: PropTypes.string,\n    showRestrictions: PropTypes.object,\n    coordinates: PropTypes.array\n  }\n\n  constructor(props) {\n    super(props)\n    this.layerControl = null\n    this.state = {\n      showPopup: false,\n      isLocateLoading: false,\n      isHeightLoading: false,\n      locate: []\n    }\n  }\n\n  // and once the component has mounted we add everything to it\n  componentDidMount() {\n    // our map!\n    //const { dispatch } = this.props\n\n    this.map = L.map('map', mapParams)\n\n    // we create a leaflet pane which will hold all isochrone polygons with a given opacity\n    const isochronesPane = this.map.createPane('isochronesPane')\n    isochronesPane.style.opacity = 0.9\n\n    // our basemap and add it to the map\n    const baseMaps = {\n      OpenStreetMap: OSMTiles\n    }\n\n    const overlayMaps = {\n      Waypoints: routeMarkersLayer,\n      'Isochrone Center': isoCenterLayer,\n      Routes: routeLineStringLayer,\n      Isochrones: isoPolygonLayer\n    }\n\n    this.layerControl = L.control.layers(baseMaps, overlayMaps).addTo(this.map)\n\n    // we do want a zoom control\n    L.control\n      .zoom({\n        position: 'topright'\n      })\n      .addTo(this.map)\n\n    //and for the sake of advertising your company, you may add a logo to the map\n    const brand = L.control({\n      position: 'bottomleft'\n    })\n    brand.onAdd = map => {\n      const div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://fossgis.de/news/2021-11-12_funding_valhalla/\" target=\"_blank\"><div class=\"fossgis-logo\"></div></a>'\n      return div\n    }\n\n    this.map.addControl(brand)\n\n    const valhallaBrand = L.control({\n      position: 'bottomleft'\n    })\n    valhallaBrand.onAdd = map => {\n      const div = L.DomUtil.create('div', 'brand')\n      div.innerHTML =\n        '<a href=\"https://github.com/valhalla/valhalla\" target=\"_blank\"><div class=\"valhalla-logo\"></div></a>'\n      return div\n    }\n\n    this.map.addControl(valhallaBrand)\n\n    const popup = L.popup({ className: 'valhalla-popup' })\n\n    this.map.on('popupclose', event => {\n      this.setState({ hasCopied: false, locate: [] })\n    })\n    this.map.on('contextmenu', event => {\n      popup.setLatLng(event.latlng).openOn(this.map)\n\n      setTimeout(() => {\n        // as setContent needs the react dom we are setting the state here\n        // to showPopup which then again renders a react portal in the render\n        // return function..\n        this.setState({\n          showPopup: true,\n          showInfoPopup: false,\n          latLng: event.latlng\n        })\n\n        popup.update()\n      }, 20) //eslint-disable-line\n    })\n\n    this.map.on('click', event => {\n      if (\n        !this.map.pm.globalRemovalEnabled() &&\n        !this.map.pm.globalDrawModeEnabled()\n      ) {\n        popup.setLatLng(event.latlng).openOn(this.map)\n\n        this.getHeight(event.latlng)\n\n        setTimeout(() => {\n          this.setState({\n            showPopup: true,\n            showInfoPopup: true,\n            latLng: event.latlng\n          })\n          popup.update()\n        }, 20) //eslint-disable-line\n      }\n    })\n\n    // add Leaflet-Geoman controls with some options to the map\n    this.map.pm.addControls({\n      position: 'topright',\n      drawCircle: false,\n      drawMarker: false,\n      drawPolyline: false,\n      cutPolygon: false,\n      drawCircleMarker: false,\n      drawRectangle: false,\n      dragMode: true,\n      allowSelfIntersection: false,\n      editPolygon: true,\n      deleteLayer: true\n    })\n\n    this.map.pm.setGlobalOptions({\n      layerGroup: excludePolygonsLayer\n    })\n\n    this.map.on('pm:create', ({ layer }) => {\n      layer.on('pm:edit', e => {\n        this.updateExcludePolygons()\n      })\n      layer.on('pm:dragend', e => {\n        this.updateExcludePolygons()\n      })\n      this.updateExcludePolygons()\n    })\n\n    this.map.on('pm:remove', e => {\n      this.updateExcludePolygons()\n    })\n\n    const getHeightData = this.getHeightData\n\n    this.hg = L.control.heightgraph({\n      mappings: colorMappings,\n      graphStyle: {\n        opacity: 0.9,\n        'fill-opacity': 1,\n        'stroke-width': '0px'\n      },\n      translation: {\n        distance: 'Distance from start'\n      },\n      expandCallback(expand) {\n        if (expand) getHeightData()\n      },\n      expandControls: true,\n      expand: false,\n      highlightStyle: {\n        color: 'blue'\n      }\n    })\n    this.hg.addTo(this.map)\n    const hg = this.hg\n    $('.heightgraph').resizable({\n      handles: 'w, n, nw',\n      minWidth: 380,\n      minHeight: 140,\n      stop: function(event, ui) {\n        // Remove the size/position of the UI element (.heightgraph .leaflet-control) because\n        // it should be sized dynamically based on its contents. Giving it a fixed size causes\n        // the toggle icon to be in the wrong place when the height graph is minimized.\n        ui.element.css({ width: '', height: '', left: '', top: '' })\n      },\n      resize: function(event, ui) {\n        if (\n          ui.originalPosition.left !== ui.position.left ||\n          ui.originalPosition.top !== ui.position.top\n        ) {\n          // left/upper edge was dragged => only keep size change since we're sticking to the right/bottom\n          ui.position.left = 0\n          ui.position.top = 0\n        }\n        hg.resize(ui.size)\n      }\n    })\n\n    // this.map.on('moveend', () => {\n    //   dispatch(doUpdateBoundingBox(this.map.getBounds()))\n    // })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      // we want to make sure only the addresses are compared\n\n      !R.equals(\n        this.props.directions.selectedAddresses,\n        nextProps.directions.selectedAddresses\n      ) ||\n      !R.equals(\n        this.props.isochrones.selectedAddress,\n        nextProps.isochrones.selectedAddress\n      )\n    ) {\n      return true\n    }\n\n    if (this.state.showPopup || nextState.showPopup) {\n      return true\n    }\n\n    if (this.props.directions.successful !== nextProps.directions.successful) {\n      return true\n    }\n\n    if (this.props.isochrones.successful !== nextProps.isochrones.successful) {\n      return true\n    }\n\n    if (\n      !R.equals(this.props.directions.results, nextProps.directions.results)\n    ) {\n      return true\n    }\n\n    if (\n      !R.equals(\n        this.props.directions.highlightSegment,\n        nextProps.directions.highlightSegment\n      )\n    ) {\n      return true\n    }\n\n    if (\n      !R.equals(this.props.directions.zoomObj, nextProps.directions.zoomObj)\n    ) {\n      return true\n    }\n\n    if (\n      !R.equals(this.props.isochrones.results, nextProps.isochrones.results)\n    ) {\n      return true\n    }\n\n    if (!R.equals(this.props.showRestrictions, nextProps.showRestrictions)) {\n      return true\n    }\n\n    if (!R.equals(this.props.coordinates, nextProps.coordinates)) {\n      return true\n    }\n\n    if (this.props.activeDataset !== nextProps.activeDataset) {\n      return true\n    }\n\n    return false\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    this.addWaypoints()\n    this.addIsoCenter()\n    this.addIsochrones()\n\n    if (!R.equals(this.props.coordinates, prevProps.coordinates)) {\n      this.zoomToCoordinates()\n    }\n    if (\n      prevProps.directions.zoomObj.timeNow <\n      this.props.directions.zoomObj.timeNow\n    ) {\n      this.zoomTo(this.props.directions.zoomObj.index)\n    }\n\n    this.addRoutes()\n    this.handleHighlightSegment()\n\n    const { directions, isochrones } = this.props\n\n    if (!directions.successful) {\n      routeLineStringLayer.clearLayers()\n    }\n    if (!isochrones.successful) {\n      isoPolygonLayer.clearLayers()\n    }\n  }\n\n  zoomToCoordinates = () => {\n    const { coordinates } = this.props\n    this.map.fitBounds(coordinates, { padding: [50, 50], maxZoom: 11 })\n  }\n\n  zoomTo = idx => {\n    const { results } = this.props.directions\n\n    const coords = results[VALHALLA_OSM_URL].data.decodedGeometry\n\n    this.map.setView(coords[idx], 17)\n\n    const highlightMarker = ExtraMarkers.icon({\n      icon: 'fa-coffee',\n      markerColor: 'blue',\n      shape: 'circle',\n      prefix: 'fa',\n      iconColor: 'white'\n    })\n\n    L.marker(coords[idx], {\n      icon: highlightMarker,\n      pmIgnore: true\n    }).addTo(highlightRouteIndexLayer)\n\n    setTimeout(() => {\n      highlightRouteIndexLayer.clearLayers()\n    }, 1000)\n  }\n\n  getIsoTooltip = (contour, area, provider) => {\n    return `\n    <div class=\"ui list\">\n        <div class=\"item\">\n        <div class=\"header\">\n            Isochrone Summary\n        </div>\n        </div>\n        <div class=\"item\">\n          <i class=\"time icon\"></i>\n          <div class=\"content\">\n            ${contour} mins\n          </div>\n        </div>\n        <div class=\"item\">\n          <i class=\"arrows alternate icon\"></i>\n          <div class=\"content\">\n            ${area} km2\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  handleHighlightSegment = () => {\n    const { highlightSegment, results } = this.props.directions\n\n    const coords = results[VALHALLA_OSM_URL].data.decodedGeometry\n\n    const { startIndex, endIndex } = highlightSegment\n    if (startIndex > -1 && endIndex > -1) {\n      L.polyline(coords.slice(startIndex, endIndex + 1), {\n        color: 'yellow',\n        weight: 4,\n        opacity: 1,\n        pmIgnore: true\n      }).addTo(highlightRouteSegmentlayer)\n    } else {\n      highlightRouteSegmentlayer.clearLayers()\n    }\n  }\n\n  addIsochrones = () => {\n    const { results } = this.props.isochrones\n    isoPolygonLayer.clearLayers()\n\n    for (const provider of [VALHALLA_OSM_URL]) {\n      if (\n        Object.keys(results[provider].data).length > 0 &&\n        results[provider].show\n      ) {\n        for (const feature of results[provider].data.features) {\n          const coords_reversed = []\n          for (const latLng of feature.geometry.coordinates) {\n            coords_reversed.push([latLng[1], latLng[0]])\n          }\n\n          L.polygon(coords_reversed, {\n            ...feature.properties,\n            color: 'white',\n            weight: 2,\n            opacity: 1.0,\n            pane: 'isochronesPane',\n            pmIgnore: true\n          })\n            .bindTooltip(\n              this.getIsoTooltip(\n                feature.properties.contour,\n                feature.properties.area.toFixed(2),\n                provider\n              ),\n              {\n                permanent: false,\n                sticky: true\n              }\n            )\n            .addTo(isoPolygonLayer)\n        }\n      }\n    }\n  }\n\n  formatDuration = durationInSeconds => {\n    const date = new Date(durationInSeconds * 1000)\n    const days = date.getDate() - 1 > 0 ? date.getDate() - 1 + 'd ' : ''\n    const hours = date.getHours() > 0 ? date.getHours() + 'h ' : ''\n    const minutes = date.getMinutes() > 0 ? date.getMinutes() + 'min' : ''\n    return days + hours + minutes\n  }\n\n  getRouteToolTip = (summary, provider) => {\n    return `\n    <div class=\"ui list\">\n        <div class=\"item\">\n          <div class=\"header\">\n              Route Summary\n          </div>\n        </div>\n        <div class=\"item\">\n          <i class=\"arrows alternate horizontal icon\"></i>\n          <div class=\"content\">\n            ${summary.length.toFixed(summary.length > 1000 ? 0 : 1)} km\n          </div>\n        </div>\n        <div class=\"item\">\n          <i class=\"time icon\"></i>\n          <div class=\"content\">\n            ${this.formatDuration(summary.time)}\n          </div>\n        </div>\n      </div>\n    `\n  }\n\n  addRoutes = () => {\n    const { results } = this.props.directions\n    routeLineStringLayer.clearLayers()\n\n    if (\n      Object.keys(results[VALHALLA_OSM_URL].data).length > 0 &&\n      results[VALHALLA_OSM_URL].show\n    ) {\n      const coords = results[VALHALLA_OSM_URL].data.decodedGeometry\n      const summary = results[VALHALLA_OSM_URL].data.trip.summary\n      L.polyline(coords, {\n        color: '#FFF',\n        weight: 9,\n        opacity: 1,\n        pmIgnore: true\n      }).addTo(routeLineStringLayer)\n      L.polyline(coords, {\n        color: routeObjects[VALHALLA_OSM_URL].color,\n        weight: 5,\n        opacity: 1,\n        pmIgnore: true\n      })\n        .addTo(routeLineStringLayer)\n        .bindTooltip(this.getRouteToolTip(summary, VALHALLA_OSM_URL), {\n          permanent: false,\n          sticky: true\n        })\n      if (this.hg._showState == true) {\n        this.hg._expand()\n      }\n    }\n  }\n\n  handleAddWaypoint = (data, e) => {\n    this.map.closePopup()\n    this.updateWaypointPosition({\n      latLng: this.state.latLng,\n      index: e.index\n    })\n  }\n\n  handleAddIsoWaypoint = (data, e) => {\n    this.map.closePopup()\n    const { latLng } = this.state\n    this.updateIsoPosition(latLng)\n  }\n\n  updateExcludePolygons() {\n    const excludePolygons = []\n    excludePolygonsLayer.eachLayer(layer => {\n      const lngLatArray = []\n      for (const coords of layer._latlngs[0]) {\n        lngLatArray.push([coords.lng, coords.lat])\n      }\n      excludePolygons.push(lngLatArray)\n    })\n\n    const { dispatch } = this.props\n\n    const name = 'exclude_polygons'\n    const value = excludePolygons\n\n    dispatch(\n      updateSettings({\n        name,\n        value\n      })\n    )\n  }\n\n  updateWaypointPosition(object) {\n    const { dispatch } = this.props\n    dispatch(fetchReverseGeocode(object))\n  }\n\n  updateIsoPosition(coord) {\n    const { dispatch } = this.props\n    dispatch(fetchReverseGeocodeIso(coord.lng, coord.lat))\n  }\n\n  addIsoCenter = () => {\n    isoCenterLayer.clearLayers()\n    const { geocodeResults } = this.props.isochrones\n    for (const address of geocodeResults) {\n      if (address.selected) {\n        const isoMarker = ExtraMarkers.icon({\n          icon: 'fa-number',\n          markerColor: 'purple',\n          shape: 'star',\n          prefix: 'fa',\n          number: '1'\n        })\n\n        L.marker([address.displaylnglat[1], address.displaylnglat[0]], {\n          icon: isoMarker,\n          draggable: true,\n          pmIgnore: true\n        })\n          .addTo(isoCenterLayer)\n          .bindTooltip(address.title, { permanent: false })\n          //.openTooltip()\n          .on('dragend', e => {\n            this.updateIsoPosition(e.target.getLatLng())\n          })\n      }\n    }\n  }\n\n  getLocate(latlng) {\n    const { profile } = this.props\n    this.setState({ isLocateLoading: true })\n    axios\n      .post(VALHALLA_OSM_URL + '/locate', buildLocateRequest(latlng, profile), {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(({ data }) => {\n        this.setState({ locate: data, isLocateLoading: false })\n      })\n      .catch(({ response }) => {\n        console.log(response) //eslint-disable-line\n      })\n  }\n\n  getHeightData = () => {\n    const { results } = this.props.directions\n    const { dispatch } = this.props\n\n    const heightPayload = buildHeightRequest(\n      results[VALHALLA_OSM_URL].data.decodedGeometry\n    )\n\n    if (!R.equals(this.state.heightPayload, heightPayload)) {\n      this.hg._removeChart()\n      this.setState({ isHeightLoading: true, heightPayload })\n      axios\n        .post(VALHALLA_OSM_URL + '/height', heightPayload, {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        })\n        .then(({ data }) => {\n          this.setState({ isHeightLoading: false })\n          // lets build geojson object with steepness for the height graph\n          const reversedGeometry = JSON.parse(\n            JSON.stringify(results[VALHALLA_OSM_URL].data.decodedGeometry)\n          ).map(pair => {\n            return [...pair.reverse()]\n          })\n          const heightData = buildHeightgraphData(\n            reversedGeometry,\n            data.range_height\n          )\n          const { inclineTotal, declineTotal } = heightData[0].properties\n          dispatch(updateInclineDeclineTotal({ inclineTotal, declineTotal }))\n\n          this.hg.addData(heightData)\n        })\n        .catch(({ response }) => {\n          console.log(response) //eslint-disable-line\n        })\n    }\n  }\n\n  getHeight(latLng) {\n    this.setState({ isHeightLoading: true })\n    axios\n      .post(\n        VALHALLA_OSM_URL + '/height',\n        buildHeightRequest([[latLng.lat, latLng.lng]]),\n        {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n      .then(({ data }) => {\n        if ('height' in data) {\n          this.setState({\n            elevation: data.height[0] + ' m',\n            isHeightLoading: false\n          })\n        }\n      })\n      .catch(({ response }) => {\n        console.log(response) //eslint-disable-line\n      })\n  }\n\n  addWaypoints() {\n    routeMarkersLayer.clearLayers()\n    const { waypoints } = this.props.directions\n    let index = 0\n    for (const waypoint of waypoints) {\n      for (const address of waypoint.geocodeResults) {\n        if (address.selected) {\n          const wpMarker = ExtraMarkers.icon({\n            icon: 'fa-number',\n            markerColor: 'green',\n            //shape: 'star',\n            prefix: 'fa',\n            number: (index + 1).toString()\n          })\n\n          L.marker([address.displaylnglat[1], address.displaylnglat[0]], {\n            icon: wpMarker,\n            draggable: true,\n            index: index,\n            pmIgnore: true\n          })\n            .addTo(routeMarkersLayer)\n            .bindTooltip(address.title, {\n              permanent: false\n            })\n            //.openTooltip()\n            .on('dragend', e => {\n              this.updateWaypointPosition({\n                latLng: e.target.getLatLng(),\n                index: e.target.options.index,\n                fromDrag: true\n              })\n            })\n        }\n      }\n      index += 1\n    }\n  }\n\n  render() {\n    const { activeTab } = this.props\n    const MapPopup = isInfo => {\n      return (\n        <React.Fragment>\n          {isInfo ? (\n            <React.Fragment>\n              <div>\n                <Button.Group basic size=\"tiny\">\n                  <Popup\n                    size=\"tiny\"\n                    content=\"Longitude, Latitude\"\n                    trigger={\n                      <Button\n                        compact\n                        content={\n                          this.state.latLng.lng.toFixed(6) +\n                          ', ' +\n                          this.state.latLng.lat.toFixed(6)\n                        }\n                      />\n                    }\n                  />\n                  <CopyToClipboard\n                    text={\n                      this.state.latLng.lng.toFixed(6) +\n                      ',' +\n                      this.state.latLng.lat.toFixed(6)\n                    }\n                    onCopy={() => this.setState({ hasCopied: true })}>\n                    <Button compact icon=\"copy\" />\n                  </CopyToClipboard>\n                </Button.Group>\n              </div>\n\n              <div className=\"mt1 flex\">\n                <Button.Group basic size=\"tiny\">\n                  <Popup\n                    size=\"tiny\"\n                    content=\"Latitude, Longitude\"\n                    trigger={\n                      <Button\n                        compact\n                        content={\n                          this.state.latLng.lat.toFixed(6) +\n                          ', ' +\n                          this.state.latLng.lng.toFixed(6)\n                        }\n                      />\n                    }\n                  />\n                  <CopyToClipboard\n                    text={\n                      this.state.latLng.lat.toFixed(6) +\n                      ',' +\n                      this.state.latLng.lng.toFixed(6)\n                    }\n                    onCopy={() => this.setState({ hasCopied: true })}>\n                    <Button compact icon=\"copy\" />\n                  </CopyToClipboard>\n                </Button.Group>\n              </div>\n              <div className=\"mt1 flex\">\n                <Button.Group basic size=\"tiny\">\n                  <Popup\n                    size=\"tiny\"\n                    content=\"Latitude, Longitude\"\n                    trigger={\n                      <Button\n                        compact\n                        content={\n                          convertDDToDMS(this.state.latLng.lat) +\n                          ' N ' +\n                          convertDDToDMS(this.state.latLng.lng) +\n                          ' E'\n                        }\n                      />\n                    }\n                  />\n                  <CopyToClipboard\n                    text={\n                      convertDDToDMS(this.state.latLng.lat) +\n                      ' N ' +\n                      convertDDToDMS(this.state.latLng.lng) +\n                      ' E'\n                    }\n                    onCopy={() => this.setState({ hasCopied: true })}>\n                    <Button compact icon=\"copy\" />\n                  </CopyToClipboard>\n                </Button.Group>\n              </div>\n\n              <div className=\"mt1\">\n                <Button.Group basic size=\"tiny\">\n                  <Popup\n                    size=\"tiny\"\n                    content=\"Calls Valhalla's Locate API\"\n                    trigger={\n                      <Button\n                        onClick={() => this.getLocate(this.state.latLng)}\n                        compact\n                        loading={this.state.isLocateLoading}\n                        icon=\"cogs\"\n                        content=\"Locate Point\"\n                      />\n                    }\n                  />\n                  <CopyToClipboard\n                    text={JSON.stringify(this.state.locate)}\n                    onCopy={() => this.setState({ hasCopied: true })}>\n                    <Button\n                      disabled={this.state.locate.length == 0}\n                      compact\n                      icon=\"copy\"\n                    />\n                  </CopyToClipboard>\n                </Button.Group>\n              </div>\n              <div className=\"mt1\">\n                <Button.Group basic size=\"tiny\">\n                  <Popup\n                    size=\"tiny\"\n                    content=\"Copies a Valhalla location object to clipboard which you can use for your API requests\"\n                    trigger={\n                      <Button\n                        compact\n                        icon=\"map marker alternate\"\n                        content=\"Valhalla Location JSON\"\n                      />\n                    }\n                  />\n                  <CopyToClipboard\n                    text={`{\n                        \"lon\": ${this.state.latLng.lng.toFixed(6)},\n                        \"lat\": ${this.state.latLng.lat.toFixed(6)}\n                      }`}\n                    onCopy={() => this.setState({ hasCopied: true })}>\n                    <Button compact icon=\"copy\" />\n                  </CopyToClipboard>\n                </Button.Group>\n              </div>\n              <div className=\"mt1 flex justify-between\">\n                <Popup\n                  size=\"tiny\"\n                  content=\"Elevation at this point\"\n                  trigger={\n                    <Button\n                      basic\n                      compact\n                      size=\"tiny\"\n                      loading={this.state.isHeightLoading}\n                      icon=\"resize vertical\"\n                      content={this.state.elevation}\n                    />\n                  }\n                />\n\n                <div>\n                  {this.state.hasCopied && (\n                    <Label size=\"mini\" basic color=\"green\">\n                      <Icon name=\"checkmark\" /> copied\n                    </Label>\n                  )}\n                </div>\n              </div>\n            </React.Fragment>\n          ) : activeTab == 0 ? (\n            <React.Fragment>\n              <Button.Group size=\"small\" basic vertical>\n                <Button compact index={0} onClick={this.handleAddWaypoint}>\n                  Directions from here\n                </Button>\n                <Button compact index={1} onClick={this.handleAddWaypoint}>\n                  Add as via point\n                </Button>\n                <Button compact index={-1} onClick={this.handleAddWaypoint}>\n                  Directions to here\n                </Button>\n              </Button.Group>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <Button.Group size=\"small\" basic vertical>\n                <Button index={0} onClick={this.handleAddIsoWaypoint}>\n                  Set center here\n                </Button>\n              </Button.Group>\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      )\n    }\n\n    const leafletPopupDiv = document.querySelector('.leaflet-popup-content')\n    return (\n      <React.Fragment>\n        <div id=\"map\" style={style} />\n        <div>\n          {this.state.showPopup && leafletPopupDiv\n            ? ReactDOM.createPortal(\n                MapPopup(this.state.showInfoPopup),\n                leafletPopupDiv\n              )\n            : null}\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { directions, isochrones, common } = state\n  const {\n    activeTab,\n    profile,\n    showRestrictions,\n    activeDataset,\n    coordinates\n  } = common\n  return {\n    directions,\n    isochrones,\n    profile,\n    coordinates,\n    activeTab,\n    activeDataset,\n    showRestrictions\n  }\n}\n\nexport default connect(mapStateToProps)(Map)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Search, Icon, Label, Popup } from 'semantic-ui-react'\nimport {\n  doRemoveWaypoint,\n  updateTextInput,\n  fetchGeocode,\n  makeRequest\n} from 'actions/directionsActions'\n\nimport { zoomTo } from 'actions/commonActions'\nimport { isValidCoordinates } from 'utils/geom'\n\nimport { debounce } from 'throttle-debounce'\n\nclass Waypoint extends React.Component {\n  static propTypes = {\n    id: PropTypes.string,\n    index: PropTypes.number,\n    dispatch: PropTypes.func.isRequired,\n    userInput: PropTypes.string,\n    isFetching: PropTypes.bool,\n    results: PropTypes.array,\n    use_geocoding: PropTypes.bool,\n    geocodeResults: PropTypes.array\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = { open: false }\n    this.handleSearchChange = this.handleSearchChange.bind(this)\n    this.handleResultSelect = this.handleResultSelect.bind(this)\n    this.fetchGeocodeResults = debounce(0, this.fetchGeocodeResults)\n  }\n\n  fetchGeocodeResults(e) {\n    const { dispatch, index, userInput, use_geocoding } = this.props\n\n    this.setState({ open: true })\n\n    if (userInput.length > 0 && e == 'Enter') {\n      // make results visible\n      if (use_geocoding) {\n        dispatch(\n          fetchGeocode({\n            inputValue: userInput,\n            index: index\n          })\n        )\n      } else {\n        const coords = userInput.split(/[\\s,;]+/)\n        // is this a coordinate?\n        if (coords.length == 2) {\n          const lat = coords[1]\n          const lng = coords[0]\n          if (isValidCoordinates(lat, lng)) {\n            dispatch(\n              fetchGeocode({\n                inputValue: userInput,\n                index: index,\n                lngLat: [parseFloat(lng), parseFloat(lat)]\n              })\n            )\n          }\n        }\n      }\n    }\n  }\n\n  handleSearchChange = event => {\n    const { dispatch, index } = this.props\n\n    dispatch(\n      updateTextInput({\n        inputValue: event.target.value,\n        index: index\n      })\n    )\n  }\n\n  // handleSelectionChange = event => {\n  //   console.log(event.target.value);\n  // };\n\n  handleResultSelect = (e, { result }) => {\n    const { dispatch, index } = this.props\n\n    this.setState({ open: false })\n    dispatch(zoomTo([[result.addresslnglat[1], result.addresslnglat[0]]]))\n    dispatch(\n      updateTextInput({\n        inputValue: result.title,\n        index: index,\n        addressindex: result.addressindex\n      })\n    )\n    dispatch(makeRequest())\n  }\n\n  resultRenderer = ({ title, description }) => (\n    <div className=\"flex-column\">\n      <div>\n        <span className=\"title\">{title}</span>\n      </div>\n      {description && description.length > 0 && (\n        <div>\n          <Icon disabled name=\"linkify\" />\n          <span className=\"description b\">\n            <a target=\"_blank\" rel=\"noreferrer\" href={description}>\n              OSM Link\n            </a>\n          </span>\n        </div>\n      )}\n    </div>\n  )\n\n  render() {\n    const {\n      dispatch,\n      isFetching,\n      geocodeResults,\n      userInput,\n      use_geocoding,\n      index\n    } = this.props\n\n    return (\n      <React.Fragment>\n        <div className=\"flex flex-row justify-between items-center\">\n          <Popup\n            content={'Re-shuffle this waypoint'}\n            size={'tiny'}\n            trigger={\n              <Label basic size=\"small\">\n                <Icon name=\"ellipsis vertical\" />\n                {parseInt(index) + 1}\n              </Label>\n            }\n          />\n          <Search\n            className={'pa2 ' + index}\n            size=\"small\"\n            fluid\n            input={{ icon: 'search', iconPosition: 'left' }}\n            onSearchChange={this.handleSearchChange}\n            onResultSelect={this.handleResultSelect}\n            resultRenderer={this.resultRenderer}\n            type=\"text\"\n            showNoResults={false}\n            open={this.state.open}\n            onFocus={() => this.setState({ open: true })}\n            onMouseDown={() => this.setState({ open: true })}\n            onBlur={() => this.setState({ open: false })}\n            loading={isFetching}\n            results={geocodeResults}\n            value={userInput}\n            onKeyPress={(event: React.KeyboardEvent) => {\n              this.fetchGeocodeResults(event.key)\n            }}\n            placeholder=\"Hit enter for search...\"\n          />\n          <Popup\n            content={\n              use_geocoding ? 'Search for address' : 'Enter Lon/lat coordinates'\n            }\n            size={'tiny'}\n            trigger={\n              <Icon\n                className=\"pointer\"\n                name=\"checkmark\"\n                disabled={userInput.length == 0}\n                size=\"small\"\n                onClick={() => this.fetchGeocodeResults('Enter')}\n              />\n            }\n          />\n          <Popup\n            content={'Remove this waypoint'}\n            size={'tiny'}\n            trigger={\n              <Icon\n                className=\"pointer\"\n                name=\"remove\"\n                size=\"small\"\n                onClick={() => dispatch(doRemoveWaypoint(index))}\n              />\n            }\n          />\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { index } = ownProps\n  const waypoint = state.directions.waypoints[index]\n  const { geocodeResults, userInput, isFetching } = waypoint\n  const { use_geocoding } = state.common.settings\n  return {\n    userInput,\n    geocodeResults,\n    isFetching,\n    use_geocoding\n  }\n}\n\nexport default connect(mapStateToProps)(Waypoint)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { connect } from 'react-redux'\n\nimport Waypoint from './Waypoint'\nimport {\n  doAddWaypoint,\n  setWaypoints,\n  makeRequest\n} from 'actions/directionsActions'\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list)\n  const [removed] = result.splice(startIndex, 1)\n  result.splice(endIndex, 0, removed)\n\n  return result\n}\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  userSelect: 'none',\n  paddingLeft: 16,\n  paddingRight: 16,\n  //background: isDragging ? 'lightgreen' : 'transparent',\n  // styles we need to apply on draggables\n  ...draggableStyle\n})\n\nconst getListStyle = isDraggingOver => ({\n  //background: isDraggingOver ? 'lightblue' : 'lightgrey',\n  width: '100%',\n  //height: 200,\n  paddingBottom: 20,\n  maxHeight: 350,\n  height: 300\n})\n\nclass Waypoints extends Component {\n  static propTypes = {\n    directions: PropTypes.object,\n    dispatch: PropTypes.func\n  }\n\n  constructor(props) {\n    super(props)\n    this.onDragEnd = this.onDragEnd.bind(this)\n    this.state = { visible: false }\n  }\n\n  handleDismiss = () => {\n    this.setState({ visible: false })\n  }\n\n  componentDidMount = () => {\n    const { dispatch, directions } = this.props\n    this.setState({ visible: true })\n\n    if (directions.waypoints.length == 0) {\n      Array(3)\n        .fill()\n        .map((_, i) => dispatch(doAddWaypoint()))\n    }\n  }\n\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return\n    }\n\n    const { dispatch, directions } = this.props\n\n    const items = reorder(\n      directions.waypoints,\n      result.source.index,\n      result.destination.index\n    )\n    dispatch(setWaypoints(items))\n    dispatch(makeRequest())\n  }\n\n  render() {\n    const { waypoints } = this.props.directions\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Droppable droppableId=\"droppable\">\n          {(provided, snapshot) => (\n            <React.Fragment>\n              <div\n                className={`flex flex-column overflow-auto`}\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                style={getListStyle(snapshot.isDraggingOver)}>\n                {waypoints.map((wp, index) => (\n                  <Draggable key={wp.id} draggableId={wp.id} index={index}>\n                    {(provided, snapshot) => (\n                      <div\n                        ref={provided.innerRef}\n                        {...provided.draggableProps}\n                        {...provided.dragHandleProps}\n                        style={getItemStyle(\n                          snapshot.isDragging,\n                          provided.draggableProps.style\n                        )}>\n                        <Waypoint\n                          id={wp.id}\n                          index={index}\n                          value={wp.text}\n                          geocodeResults={wp.geocodeResults}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                ))}\n                {provided.placeholder}\n              </div>\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { directions } = state\n  return {\n    directions\n  }\n}\n\nexport default connect(mapStateToProps)(Waypoints)\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgScooter = function SvgScooter(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.8202 4H13.0002V6H15.1802L15.9002 8.6L11.2802 12.29L9.54017 9H2.00017V11H2.64017C2.19311 11.9355 1.9738 12.9635 2.00017 14V16H4.00017C4.00017 17.0609 4.4216 18.0783 5.17175 18.8284C5.92189 19.5786 6.93931 20 8.00017 20C9.06104 20 10.0785 19.5786 10.8286 18.8284C11.5787 18.0783 12.0002 17.0609 12.0002 16V14.28L18.1002 9.4L16.8202 4ZM8.00017 18C7.46974 18 6.96103 17.7893 6.58596 17.4142C6.21089 17.0391 6.00017 16.5304 6.00017 16H10.0002C10.0002 16.5304 9.78946 17.0391 9.41439 17.4142C9.03931 17.7893 8.53061 18 8.00017 18ZM18.0002 12C17.209 12 16.4357 12.2346 15.7779 12.6741C15.1201 13.1136 14.6074 13.7384 14.3047 14.4693C14.0019 15.2002 13.9227 16.0044 14.077 16.7804C14.2314 17.5563 14.6123 18.269 15.1717 18.8284C15.7312 19.3878 16.4439 19.7688 17.2198 19.9231C17.9957 20.0775 18.8 19.9983 19.5309 19.6955C20.2618 19.3928 20.8865 18.8801 21.3261 18.2223C21.7656 17.5645 22.0002 16.7911 22.0002 16C22.0002 14.9391 21.5787 13.9217 20.8286 13.1716C20.0785 12.4214 19.061 12 18.0002 12ZM18.0002 18C17.6046 18 17.2179 17.8827 16.889 17.6629C16.5601 17.4432 16.3038 17.1308 16.1524 16.7654C16.001 16.3999 15.9614 15.9978 16.0386 15.6098C16.1158 15.2219 16.3063 14.8655 16.586 14.5858C16.8657 14.3061 17.222 14.1156 17.61 14.0384C17.998 13.9613 18.4001 14.0009 18.7655 14.1522C19.131 14.3036 19.4433 14.56 19.6631 14.8889C19.8829 15.2178 20.0002 15.6044 20.0002 16C20.0002 16.5304 19.7895 17.0391 19.4144 17.4142C19.0393 17.7893 18.5306 18 18.0002 18Z\",\n    fill: \"#00000099\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgScooter, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/scooter.54697a47.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgCar = function SvgCar(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M22 7H19.5L18.6 5.8C18.2 5.3 17.6 5 16.9 5H7C6.3 5 5.7 5.3 5.3 5.8L4.5 7H2V9H3.1L2.3 10.1C2.1 10.4 2 10.7 2 11.1V17C2 18.1 2.9 19 4 19H7C7.6 19 8 18.6 8 18V17H16V18C16 18.6 16.4 19 17 19H20C20.5 19 21 18.8 21.4 18.4C21.8 18 22 17.5 22 17V11.1C22 10.7 21.9 10.4 21.7 10.1L20.9 9H22V7ZM8 14H4V12H8V14ZM5 10L6.7 7.5C6.9 7.2 7.2 7 7.5 7H16.4C16.7 7 17 7.2 17.2 7.5L19 10H12H5ZM20 14H16V12H20V14Z\",\n    fill: \"#00000099\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCar, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/car.a4334245.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgTruck = function SvgTruck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M4 5C2.89543 5 2 5.89543 2 7V18H2.05001C2.28164 19.1411 3.29052 20 4.5 20C5.70948 20 6.71836 19.1411 6.94999 18H7.05001C7.28164 19.1411 8.29052 20 9.5 20C10.7095 20 11.7184 19.1411 11.95 18H15.05C15.2816 19.1411 16.2905 20 17.5 20C18.7095 20 19.7184 19.1411 19.95 18H22V14C22 12.8954 21.1046 12 20 12V10C20 8.89543 19.1046 8 18 8H16V7C16 5.89543 15.1046 5 14 5H4ZM11.5002 16H14V7H4V15.05C4.16156 15.0172 4.32877 15 4.5 15C5.31791 15 6.04408 15.3928 6.50018 16H7.49982C7.95592 15.3928 8.68209 15 9.5 15C10.3179 15 11.0441 15.3928 11.5002 16ZM18 10H16V12H18V10ZM4.5 18.5C5.05228 18.5 5.5 18.0523 5.5 17.5C5.5 16.9477 5.05228 16.5 4.5 16.5C3.94772 16.5 3.5 16.9477 3.5 17.5C3.5 18.0523 3.94772 18.5 4.5 18.5ZM10.5 17.5C10.5 18.0523 10.0523 18.5 9.5 18.5C8.94772 18.5 8.5 18.0523 8.5 17.5C8.5 16.9477 8.94772 16.5 9.5 16.5C10.0523 16.5 10.5 16.9477 10.5 17.5ZM18.5 17.5C18.5 18.0523 18.0523 18.5 17.5 18.5C16.9477 18.5 16.5 18.0523 16.5 17.5C16.5 16.9477 16.9477 16.5 17.5 16.5C18.0523 16.5 18.5 16.9477 18.5 17.5Z\",\n    fill: \"#00000099\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTruck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/truck.5e609731.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgBike = function SvgBike(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.8944 11.0103L17.2844 6.51027C17.1673 5.80222 16.8002 5.15964 16.2497 4.69911C15.6993 4.23859 15.002 3.99064 14.2844 4.00027H12.0144V6.01027H14.3244C14.5598 6.00599 14.7891 6.08488 14.972 6.23304C15.1549 6.38121 15.2797 6.58915 15.3244 6.82027L15.5944 9.01027H10.0144V7.01027H5.01441V9.01027H7.01441V11.0103H6.51441C5.69469 11.0076 4.88983 11.229 4.18671 11.6504C3.4836 12.0718 2.90894 12.6772 2.52478 13.4013C2.14061 14.1254 1.96154 14.9407 2.00689 15.7592C2.05224 16.5777 2.32029 17.3682 2.78211 18.0455C3.24392 18.7227 3.88195 19.2609 4.62731 19.6021C5.37268 19.9432 6.19707 20.0743 7.01147 19.9811C7.82588 19.8879 8.59937 19.5741 9.24843 19.0734C9.8975 18.5728 10.3975 17.9043 10.6944 17.1403C10.838 17.196 10.985 17.2427 11.1344 17.2803C11.2676 17.2902 11.4013 17.2902 11.5344 17.2803C12.1426 17.2771 12.7289 17.0532 13.1844 16.6503C13.3978 17.4441 13.825 18.1641 14.4194 18.7318C15.0139 19.2995 15.7528 19.6931 16.5556 19.8698C17.3584 20.0464 18.1942 19.9993 18.9721 19.7335C19.7499 19.4678 20.4399 18.9936 20.9668 18.3627C21.4937 17.7318 21.8372 16.9683 21.9601 16.1556C22.0829 15.3428 21.9802 14.5119 21.6633 13.7535C21.3464 12.9951 20.8273 12.3382 20.1628 11.8545C19.4982 11.3707 18.7135 11.0787 17.8944 11.0103ZM6.51441 18.0103C6.07813 18.0119 5.64903 17.8993 5.26975 17.6837C4.89046 17.4681 4.57419 17.1571 4.35238 16.7814C4.13056 16.4057 4.01091 15.9785 4.00533 15.5423C3.99974 15.1061 4.10841 14.676 4.32054 14.2947C4.53267 13.9135 4.84087 13.5944 5.21451 13.3692C5.58815 13.144 6.01423 13.0204 6.4504 13.0109C6.88657 13.0013 7.31764 13.1061 7.70078 13.3147C8.08393 13.5234 8.40579 13.8287 8.63441 14.2003L9.01441 15.1103C9.02476 15.2434 9.02476 15.3771 9.01441 15.5103C9.01441 16.1733 8.75101 16.8092 8.28217 17.278C7.81333 17.7469 7.17745 18.0103 6.51441 18.0103ZM11.9444 15.1003C11.8913 15.178 11.8166 15.2383 11.7295 15.2739C11.6423 15.3095 11.5467 15.3186 11.4544 15.3003C11.3578 15.2845 11.2677 15.2412 11.195 15.1756C11.1223 15.11 11.07 15.0248 11.0444 14.9303L10.9244 14.6203C10.8332 14.2006 10.6816 13.7964 10.4744 13.4203L9.57441 11.0103H14.7844L11.9444 15.1003ZM17.5144 18.0103C17.02 18.0103 16.5366 17.8636 16.1255 17.5889C15.7144 17.3142 15.3939 16.9238 15.2047 16.467C15.0155 16.0102 14.966 15.5075 15.0624 15.0225C15.1589 14.5376 15.397 14.0921 15.7466 13.7425C16.0963 13.3929 16.5417 13.1548 17.0267 13.0583C17.5116 12.9618 18.0143 13.0114 18.4711 13.2006C18.9279 13.3898 19.3184 13.7102 19.5931 14.1213C19.8678 14.5325 20.0144 15.0158 20.0144 15.5103C20.0144 16.1733 19.751 16.8092 19.2822 17.278C18.8133 17.7469 18.1774 18.0103 17.5144 18.0103Z\",\n    fill: \"#00000099\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgBike, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/bike.ce8662c1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgPedestrian = function SvgPedestrian(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.0002 4.47V3.53C9.99757 3.12858 10.1538 2.74241 10.4348 2.45576C10.7158 2.16911 11.0989 2.00527 11.5002 2C11.6981 1.9998 11.894 2.03956 12.0761 2.11688C12.2583 2.19421 12.4229 2.30751 12.5602 2.45C12.8419 2.739 12.9998 3.12645 13.0002 3.53V4.47C13.0002 4.86783 12.8422 5.24936 12.5609 5.53066C12.2796 5.81197 11.8981 5.97 11.5002 5.97C11.1024 5.97 10.7209 5.81197 10.4396 5.53066C10.1583 5.24936 10.0002 4.86783 10.0002 4.47ZM13.2202 7H9.78025C9.52822 7.00278 9.27955 7.05817 9.05016 7.16262C8.82078 7.26707 8.61574 7.41828 8.44817 7.60655C8.2806 7.79483 8.15421 8.01603 8.07707 8.25598C7.99994 8.49593 7.97377 8.74935 8.00025 9V14H10.0002V22H13.0002V14H15.0002V9C15.0276 8.49919 14.8558 8.00788 14.5224 7.63321C14.1889 7.25855 13.7209 7.03093 13.2202 7Z\",\n    fill: \"#00000099\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPedestrian, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pedestrian.404f0602.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Popup } from 'semantic-ui-react'\n\nimport { ReactComponent as BusSvg } from 'images/bus.svg'\nimport { ReactComponent as ScooterSvg } from 'images/scooter.svg'\nimport { ReactComponent as CarSvg } from 'images/car.svg'\nimport { ReactComponent as TruckSvg } from 'images/truck.svg'\nimport { ReactComponent as BikeSvg } from 'images/bike.svg'\nimport { ReactComponent as PedestrianSvg } from 'images/pedestrian.svg'\n\nconst iconMap = {\n  truck: <TruckSvg />,\n  car: <CarSvg />,\n  bicycle: <BikeSvg />,\n  pedestrian: <PedestrianSvg />,\n  motor_scooter: <ScooterSvg />,\n  bus: <BusSvg />\n}\n\nexport const ProfilePicker = ({\n  group,\n  loading,\n  popupContent,\n  profiles,\n  activeProfile,\n  handleUpdateProfile\n}) => (\n  <Button.Group basic size=\"small\" style={{ height: '40px' }}>\n    {profiles.map((profile, i) => (\n      <Popup\n        key={i}\n        content={popupContent[i]}\n        size={'small'}\n        trigger={\n          <Button\n            active={profile === activeProfile}\n            loading={profile === activeProfile ? loading : false}\n            content={iconMap[profile]}\n            name={'profile'}\n            valhalla_profile={profile}\n            group={group}\n            style={{ padding: '.5em' }}\n            onClick={handleUpdateProfile}\n          />\n        }\n      />\n    ))}\n  </Button.Group>\n)\nProfilePicker.propTypes = {\n  profiles: PropTypes.array,\n  loading: PropTypes.bool,\n  activeProfile: PropTypes.string,\n  handleUpdateProfile: PropTypes.func,\n  group: PropTypes.string,\n  popupContent: PropTypes.array\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Popup, Icon } from 'semantic-ui-react'\n\nexport const Settings = ({\n  handleAddWaypoint,\n  handleRemoveWaypoints,\n  handleSettings\n}) => (\n  <div>\n    <Popup\n      content={'Reset waypoints'}\n      size={'tiny'}\n      trigger={\n        <Button basic size=\"tiny\" icon onClick={() => handleRemoveWaypoints()}>\n          <Icon name=\"trash\" />\n        </Button>\n      }\n    />\n    <Popup\n      content={'Add waypoint'}\n      size={'tiny'}\n      trigger={\n        <Button basic size=\"tiny\" icon onClick={() => handleAddWaypoint()}>\n          <Icon name=\"plus\" />\n        </Button>\n      }\n    />\n    <Popup\n      content={'Show/hide settings'}\n      size={'tiny'}\n      trigger={\n        <Button basic size=\"tiny\" icon onClick={() => handleSettings()}>\n          <Icon name=\"cogs\" />\n        </Button>\n      }\n    />\n  </div>\n)\nSettings.propTypes = {\n  handleAddWaypoint: PropTypes.func,\n  handleRemoveWaypoints: PropTypes.func,\n  handleSettings: PropTypes.func,\n  group: PropTypes.string\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Divider } from 'semantic-ui-react'\n\nimport Waypoints from './Waypoints'\n\nimport { ProfilePicker } from 'components/profile-picker'\nimport { Settings } from './settings'\n\nimport {\n  doAddWaypoint,\n  doRemoveWaypoint,\n  makeRequest,\n  clearRoutes\n} from 'actions/directionsActions'\nimport {\n  updateProfile,\n  doShowSettings,\n  updatePermalink\n} from 'actions/commonActions'\n\nclass DirectionsControl extends React.Component {\n  static propTypes = {\n    profile: PropTypes.string.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    loading: PropTypes.bool\n  }\n\n  handleUpdateProfile = (event, data) => {\n    const { dispatch } = this.props\n    dispatch(updateProfile({ profile: data.valhalla_profile }))\n    dispatch(updatePermalink())\n  }\n\n  handleAddWaypoint = (event, data) => {\n    const { dispatch } = this.props\n    dispatch(doAddWaypoint())\n  }\n\n  handleRemoveWaypoints = () => {\n    const { dispatch } = this.props\n    dispatch(doRemoveWaypoint())\n    dispatch(clearRoutes())\n  }\n\n  componentDidUpdate = prevProps => {}\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { dispatch } = this.props\n    if (this.props.profile !== nextProps.profile) {\n      dispatch(makeRequest())\n    }\n  }\n\n  handleSettings = () => {\n    const { dispatch } = this.props\n    dispatch(doShowSettings())\n  }\n\n  render() {\n    const { profile, loading } = this.props\n    return (\n      <React.Fragment>\n        <div className=\"flex flex-column content-between\">\n          <div>\n            <div\n              className=\"pa3 flex flex-row justify-between\"\n              style={{ height: '60px' }}>\n              <ProfilePicker\n                group={'directions'}\n                profiles={[\n                  'bicycle',\n                  'pedestrian',\n                  'car',\n                  'truck',\n                  'bus',\n                  'motor_scooter'\n                ]}\n                loading={loading}\n                popupContent={[\n                  'bicycle',\n                  'pedestrian',\n                  'car',\n                  'truck',\n                  'bus',\n                  'motor scooter'\n                ]}\n                activeProfile={profile}\n                handleUpdateProfile={this.handleUpdateProfile}\n              />\n              <Settings\n                handleAddWaypoint={this.handleAddWaypoint}\n                handleRemoveWaypoints={this.handleRemoveWaypoints}\n                handleSettings={this.handleSettings}\n              />\n            </div>\n            <React.Fragment>\n              <Waypoints />\n            </React.Fragment>\n          </div>\n          <Divider fitted />\n          <div className=\"ml2\">\n            <span className=\"custom-label\">\n              Calculations by{' '}\n              <a\n                href=\"https://github.com/valhalla/valhalla\"\n                target=\"_blank\"\n                rel=\"noreferrer\">\n                Valhalla\n              </a>{' '}\n              • visualized with{' '}\n              <a\n                href=\"https://github.com/gis-ops/valhalla-app/\"\n                target=\"_blank\"\n                rel=\"noreferrer\">\n                Valhalla App\n              </a>\n            </span>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { profile, loading } = state.common\n  return {\n    profile,\n    loading\n  }\n}\n\nexport default connect(mapStateToProps)(DirectionsControl)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\n\nimport { Search, Form, Popup, Icon, Label, Accordion } from 'semantic-ui-react'\nimport { Slider } from '@mui/material'\n\nimport { isValidCoordinates } from 'utils/geom'\nimport {\n  updateTextInput,\n  updateIsoSettings,\n  fetchGeocode,\n  makeIsochronesRequest\n} from 'actions/isochronesActions'\n\nimport { updatePermalink, zoomTo } from 'actions/commonActions'\n\nimport { debounce } from 'throttle-debounce'\n\nclass Waypoints extends Component {\n  static propTypes = {\n    isochrones: PropTypes.object,\n    dispatch: PropTypes.func,\n    use_geocoding: PropTypes.bool\n  }\n\n  constructor(props) {\n    super(props)\n    this.fetchGeocodeResults = debounce(200, this.fetchGeocodeResults)\n    this.handleIsoSliderUpdateSettings = debounce(\n      10,\n      this.handleIsoSliderUpdateSettings\n    )\n  }\n\n  state = { activeIndex: 0, open: false }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  handleSearchChange = (event, { value }) => {\n    const { dispatch } = this.props\n    dispatch(updateTextInput({ userInput: value }))\n  }\n\n  fetchGeocodeResults(e) {\n    const { dispatch, use_geocoding, isochrones } = this.props\n    const { userInput } = isochrones\n\n    this.setState({ open: true })\n\n    if (userInput.length > 0 && e == 'Enter') {\n      // make results visible\n      if (use_geocoding) {\n        dispatch(fetchGeocode(userInput))\n      } else {\n        const coords = userInput.split(/[\\s,;]+/)\n        // is this a coordinate?\n        if (coords.length == 2) {\n          const lat = coords[1]\n          const lng = coords[0]\n          if (isValidCoordinates(lat, lng)) {\n            dispatch(\n              fetchGeocode(userInput, [parseFloat(lng), parseFloat(lat)])\n            )\n          }\n        }\n      }\n    }\n  }\n\n  // we really only want to call the valhalla backend if settings have changed\n  // therefor using rambda for deep object comparison\n  UNSAFE_componentWillUpdate(nextProps) {\n    const { dispatch } = this.props\n    const { maxRange, interval } = this.props.isochrones\n    const nextMaxRange = nextProps.isochrones.maxRange\n    const nextInterval = nextProps.isochrones.interval\n    if (\n      !R.equals(maxRange, nextMaxRange) ||\n      !R.equals(interval, nextInterval)\n    ) {\n      dispatch(makeIsochronesRequest())\n    }\n  }\n\n  handleResultSelect = (e, { result }) => {\n    this.setState({ open: false })\n\n    const { dispatch } = this.props\n    dispatch(\n      updateTextInput({\n        userInput: result.title,\n        addressindex: result.addressindex\n      })\n    )\n    dispatch(zoomTo([[result.addresslnglat[1], result.addresslnglat[0]]]))\n    dispatch(makeIsochronesRequest())\n  }\n\n  handleIntervalChange = (e, { value }) => {\n    const { maxRange } = this.props.isochrones\n\n    value = isNaN(parseInt(value)) ? 0 : parseInt(value)\n    if (value > maxRange) {\n      value = maxRange\n    }\n\n    const intervalName = 'interval'\n\n    this.handleIsoSliderUpdateSettings({\n      intervalName,\n      value\n    })\n  }\n\n  handleRangeChange = (e, { value }) => {\n    value = isNaN(parseInt(value)) ? 0 : parseInt(value)\n    if (value > 120) {\n      value = 120\n    }\n\n    const maxRangeName = 'maxRange'\n    const intervalName = 'interval'\n\n    this.handleIsoSliderUpdateSettings({\n      maxRangeName,\n      intervalName,\n      value\n    })\n  }\n\n  handleIsoSliderUpdateSettings = ({ value, maxRangeName, intervalName }) => {\n    const { dispatch } = this.props\n    // maxRangeName can be undefined if interval is being updated\n    dispatch(\n      updateIsoSettings({\n        maxRangeName,\n        intervalName,\n        value: parseInt(value)\n      })\n    )\n\n    dispatch(updatePermalink())\n  }\n\n  resultRenderer = ({ title, description }) => (\n    <div className=\"flex-column\">\n      <div>\n        <span className=\"title\">{title}</span>\n      </div>\n      {description && description.length > 0 && (\n        <div>\n          <Icon disabled name=\"linkify\" />\n          <span className=\"description b\">\n            <a target=\"_blank\" rel=\"noreferrer\" href={description}>\n              OSM Link\n            </a>\n          </span>\n        </div>\n      )}\n    </div>\n  )\n\n  render() {\n    const {\n      isFetching,\n      geocodeResults,\n      userInput,\n      maxRange,\n      interval\n    } = this.props.isochrones\n    const { activeIndex } = this.state\n\n    const controlSettings = {\n      maxRange: {\n        name: 'Maximum Range',\n        param: 'maxRange',\n        description: 'The maximum range in minutes',\n        unit: 'mins',\n        settings: {\n          min: 1,\n          max: 120,\n          step: 1\n        }\n      },\n      interval: {\n        name: 'Interval Step',\n        param: 'interval',\n        description: 'The interval length in minutes.',\n        unit: 'mins',\n        settings: {\n          min: 1,\n          max: maxRange,\n          step: 1\n        }\n      }\n    }\n\n    return (\n      <div>\n        <Search\n          size=\"small\"\n          type=\"text\"\n          minCharacters={3}\n          className={'pt2 pl3'}\n          input={{ icon: 'search', iconPosition: 'left' }}\n          onSearchChange={this.handleSearchChange}\n          onResultSelect={this.handleResultSelect}\n          resultRenderer={this.resultRenderer}\n          showNoResults={false}\n          open={this.state.open}\n          onFocus={() => this.setState({ open: true })}\n          onMouseDown={() => this.setState({ open: true })}\n          loading={isFetching}\n          results={geocodeResults}\n          value={userInput}\n          onKeyPress={(event: React.KeyboardEvent) => {\n            this.fetchGeocodeResults(event.key)\n          }}\n          placeholder=\"Hit enter for search...\"\n        />\n\n        <div className=\"pa2\">\n          <Accordion>\n            <Accordion.Title\n              active={activeIndex === 0}\n              index={0}\n              onClick={this.handleClick}>\n              <Icon name=\"dropdown\" />\n              <span className=\"f5\">Settings</span>\n            </Accordion.Title>\n            <Accordion.Content active={activeIndex === 0}>\n              <Form size={'small'}>\n                <div className={'pt3 pl3'}>\n                  <Form.Group inline>\n                    <Form.Input\n                      width={12}\n                      size=\"small\"\n                      label={\n                        <div className=\"flex flex-row align-top\">\n                          <span className=\"custom-label\">\n                            {controlSettings.maxRange.name}\n                          </span>\n                          <Popup\n                            content={controlSettings.maxRange.description}\n                            size={'tiny'}\n                            trigger={\n                              <Icon\n                                className=\"pl2\"\n                                color=\"grey\"\n                                name=\"help circle\"\n                              />\n                            }\n                          />\n                        </div>\n                      }\n                      value={maxRange}\n                      type=\"number\"\n                      step=\"1\"\n                      placeholder=\"Enter Value\"\n                      name={controlSettings.maxRange.param}\n                      onChange={this.handleRangeChange}\n                    />\n                    <Popup\n                      content={'Units'}\n                      size={'tiny'}\n                      trigger={\n                        <Label\n                          basic\n                          size={'small'}\n                          style={{ cursor: 'default' }}>\n                          {controlSettings.maxRange.unit}\n                        </Label>\n                      }\n                    />\n                  </Form.Group>\n                  <div className={'mb2 pa2'}>\n                    <Slider\n                      min={controlSettings.maxRange.settings.min}\n                      max={controlSettings.maxRange.settings.max}\n                      step={controlSettings.maxRange.settings.step}\n                      value={maxRange}\n                      color=\"secondary\"\n                      aria-label=\"Default\"\n                      valueLabelDisplay=\"auto\"\n                      onChange={e => {\n                        const maxRangeName = controlSettings.maxRange.param\n                        const intervalName = controlSettings.interval.param\n                        this.handleIsoSliderUpdateSettings({\n                          maxRangeName,\n                          intervalName,\n                          value: e.target.value\n                        })\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className={'pt3 pl3'}>\n                  <Form.Group inline>\n                    <Form.Input\n                      width={12}\n                      size=\"small\"\n                      label={\n                        <div className=\"flex flex-row align-top\">\n                          <span className=\"custom-label\">\n                            {controlSettings.interval.name}\n                          </span>\n                          <Popup\n                            content={controlSettings.interval.description}\n                            size={'tiny'}\n                            trigger={\n                              <Icon\n                                className=\"pl2\"\n                                color=\"grey\"\n                                name=\"help circle\"\n                              />\n                            }\n                          />\n                        </div>\n                      }\n                      value={interval}\n                      placeholder=\"Enter Value\"\n                      name={controlSettings.interval.param}\n                      onChange={this.handleIntervalChange}\n                    />\n                    <Popup\n                      content={'Units'}\n                      size={'tiny'}\n                      trigger={\n                        <Label\n                          basic\n                          size={'small'}\n                          style={{ cursor: 'default' }}>\n                          {controlSettings.interval.unit}\n                        </Label>\n                      }\n                    />\n                  </Form.Group>\n                  <div className={'mb2 pa2'}>\n                    <Slider\n                      min={controlSettings.interval.settings.min}\n                      max={controlSettings.interval.settings.max}\n                      step={controlSettings.interval.settings.step}\n                      value={interval}\n                      color=\"secondary\"\n                      aria-label=\"Default\"\n                      valueLabelDisplay=\"auto\"\n                      onChange={e => {\n                        const intervalName = controlSettings.interval.param\n                        this.handleIsoSliderUpdateSettings({\n                          intervalName,\n                          value: e.target.value\n                        })\n                      }}\n                    />\n                  </div>\n                </div>\n              </Form>\n            </Accordion.Content>\n          </Accordion>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { isochrones } = state\n  const { use_geocoding } = state.common.settings\n\n  return {\n    isochrones,\n    use_geocoding\n  }\n}\n\nexport default connect(mapStateToProps)(Waypoints)\n","import React from 'react'\nimport { Button, Popup, Icon } from 'semantic-ui-react'\nimport PropTypes from 'prop-types'\n\nexport const Settings = ({ handleRemoveIsos, handleSettings }) => {\n  return (\n    <div>\n      <Popup\n        content={'Reset waypoints'}\n        size={'tiny'}\n        trigger={\n          <Button basic size=\"tiny\" icon onClick={() => handleRemoveIsos()}>\n            <Icon name=\"trash\" />\n          </Button>\n        }\n      />\n      <Popup\n        content={'Show/hide settings'}\n        size={'tiny'}\n        trigger={\n          <Button basic size=\"tiny\" icon onClick={() => handleSettings()}>\n            <Icon name=\"cogs\" />\n          </Button>\n        }\n      />\n    </div>\n  )\n}\n\nSettings.propTypes = {\n  handleRemoveIsos: PropTypes.func,\n  handleSettings: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Divider } from 'semantic-ui-react'\n\nimport Waypoints from './Waypoints'\n\nimport { ProfilePicker } from '../../components/profile-picker'\nimport { Settings } from './settings'\n\nimport {\n  updateProfile,\n  doShowSettings,\n  updatePermalink\n} from 'actions/commonActions'\nimport { clearIsos, makeIsochronesRequest } from 'actions/isochronesActions'\n\nclass IsochronesControl extends React.Component {\n  static propTypes = {\n    profile: PropTypes.string.isRequired,\n    loading: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired\n  }\n\n  handleUpdateProfile = (event, data) => {\n    const { dispatch } = this.props\n    dispatch(updateProfile({ profile: data.valhalla_profile }))\n    dispatch(updatePermalink())\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { dispatch } = this.props\n    if (this.props.profile !== nextProps.profile) {\n      dispatch(makeIsochronesRequest())\n    }\n  }\n\n  handleRemoveIsos = () => {\n    const { dispatch } = this.props\n    dispatch(clearIsos())\n  }\n\n  handleSettings = () => {\n    const { dispatch } = this.props\n    dispatch(doShowSettings())\n  }\n\n  render() {\n    const { profile, loading } = this.props\n    return (\n      <React.Fragment>\n        <div className=\"flex flex-column content-between\">\n          <div className=\"pa3 flex flex-row justify-between\">\n            <ProfilePicker\n              group={'directions'}\n              loading={loading}\n              profiles={[\n                'bicycle',\n                'pedestrian',\n                'car',\n                'truck',\n                'bus',\n                'motor_scooter'\n              ]}\n              popupContent={[\n                'bicycle',\n                'pedestrian',\n                'car',\n                'truck',\n                'bus',\n                'motor scooter'\n              ]}\n              activeProfile={profile}\n              handleUpdateProfile={this.handleUpdateProfile}\n            />\n            <Settings\n              handleRemoveIsos={this.handleRemoveIsos}\n              handleSettings={this.handleSettings}\n            />\n          </div>\n          <Waypoints />\n          <Divider fitted />\n          <div className=\"ml2\">\n            <span className=\"custom-label\">\n              Calculations by{' '}\n              <a\n                href=\"https://github.com/valhalla/valhalla\"\n                target=\"_blank\"\n                rel=\"noreferrer\">\n                Valhalla\n              </a>{' '}\n              • visualized with{' '}\n              <a\n                href=\"https://github.com/gis-ops/valhalla-app/\"\n                target=\"_blank\"\n                rel=\"noreferrer\">\n                Valhalla App\n              </a>\n            </span>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { profile, loading } = state.common\n  return {\n    profile,\n    loading\n  }\n}\n\nexport default connect(mapStateToProps)(IsochronesControl)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport { intervalToDuration } from 'date-fns'\n\nimport { Icon, Checkbox, Popup } from 'semantic-ui-react'\nimport { showProvider } from '../../actions/directionsActions'\n\nclass Summary extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    results: PropTypes.object,\n    inclineDeclineTotal: PropTypes.object,\n    header: PropTypes.string,\n    provider: PropTypes.string\n  }\n\n  handleChange = (event, data) => {\n    const { dispatch } = this.props\n    dispatch(showProvider(data.provider, data.checked))\n  }\n\n  formatDuration = durationInSeconds => {\n    const duration = intervalToDuration({\n      start: 0,\n      end: durationInSeconds * 1000\n    })\n\n    let durationStr = ''\n    if (duration.days > 0) {\n      durationStr += duration.days + 'd '\n    }\n    if (duration.hours > 0) {\n      durationStr += duration.hours + 'h '\n    }\n    if (duration.minutes > 0) {\n      durationStr += duration.minutes + 'min '\n    }\n    if (duration.seconds > 0) {\n      durationStr += duration.seconds + 'sec'\n    }\n    return durationStr\n  }\n\n  render() {\n    const { provider, results, inclineDeclineTotal } = this.props\n\n    const summary = R.path([provider, 'data', 'trip', 'summary'], results)\n\n    return (\n      <React.Fragment>\n        {summary ? (\n          <React.Fragment>\n            <div className=\"flex mb1\">\n              <span className=\"b\">Directions</span>\n            </div>\n            <div className={'flex justify-between pb2 pointer'}>\n              <div style={{ alignSelf: 'center', flexBasis: '100px' }}>\n                <Icon\n                  circular\n                  name={'arrows alternate horizontal'}\n                  size={'small'}\n                />\n                <div className={'dib v-mid pa1 b f6'}>\n                  {`${summary.length.toFixed(\n                    summary.length > 1000 ? 0 : 1\n                  )} km`}\n                </div>\n              </div>\n              <div style={{ alignSelf: 'center', flexGrow: 1 }}>\n                <Icon circular name={'time'} size=\"small\" />\n                <div className={'dib v-mid pa1 b f6'}>\n                  {this.formatDuration(summary.time)}\n                </div>\n              </div>\n              <div style={{ alignSelf: 'center' }}>\n                <Checkbox\n                  slider\n                  label={'Map'}\n                  checked={results[provider].show}\n                  provider={provider}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            {inclineDeclineTotal && (\n              <div className={'flex pb3 pointer'}>\n                <div style={{ alignSelf: 'center', marginRight: '1em' }}>\n                  <Popup\n                    content={'Total incline'}\n                    size={'tiny'}\n                    trigger={\n                      <div>\n                        <Icon circular name={'arrow up'} size={'small'} />\n                        <div className={'dib v-mid pa1 b f6'}>\n                          {`${inclineDeclineTotal.inclineTotal} m`}\n                        </div>\n                      </div>\n                    }\n                  />\n                </div>\n                <div style={{ alignSelf: 'center', flexBasis: '100px' }}>\n                  <Popup\n                    content={'Total decline'}\n                    size={'tiny'}\n                    trigger={\n                      <div>\n                        <Icon circular name={'arrow down'} size={'small'} />\n                        <div className={'dib v-mid pa1 b f6'}>\n                          {`${inclineDeclineTotal.declineTotal} m`}\n                        </div>\n                      </div>\n                    }\n                  />\n                </div>\n              </div>\n            )}\n          </React.Fragment>\n        ) : (\n          <div>No route found</div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { results, inclineDeclineTotal } = state.directions\n  return {\n    results,\n    inclineDeclineTotal\n  }\n}\n\nexport default connect(mapStateToProps)(Summary)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport { Header, Icon, Divider } from 'semantic-ui-react'\n\nimport { highlightManeuver, zoomToManeuver } from 'actions/directionsActions'\n\nconst getLength = length => {\n  const visibleLength = length * 1000\n  if (visibleLength < 1000) {\n    return visibleLength + 'm'\n  }\n  return (visibleLength / 1000).toFixed(2) + 'km'\n}\n\nclass Maneuvers extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    results: PropTypes.object,\n    header: PropTypes.string,\n    provider: PropTypes.string,\n    profile: PropTypes.string\n  }\n\n  highlightMnv = (sIdx, eIdx) => {\n    const { dispatch } = this.props\n    dispatch(highlightManeuver({ startIndex: sIdx, endIndex: eIdx }))\n  }\n\n  zoomToMnv = sIdx => {\n    const { dispatch } = this.props\n    dispatch(zoomToManeuver({ index: sIdx, timeNow: Date.now() }))\n  }\n\n  render() {\n    const { provider, results } = this.props\n\n    const legs = R.path([provider, 'data', 'trip', 'legs'], results)\n\n    const startIndices = {\n      0: 0\n    }\n    if (legs) {\n      for (let i = 0; i < legs.length - 1; i++) {\n        const endShapeIndex =\n          legs[i].maneuvers[legs[i].maneuvers.length - 1].end_shape_index\n        startIndices[i + 1] = endShapeIndex\n      }\n    }\n\n    return (\n      <React.Fragment>\n        {legs &&\n          legs.map((leg, i) =>\n            leg.maneuvers.map((mnv, j) => (\n              <React.Fragment key={j}>\n                <div\n                  className={'flex-column pt3 pb3 pointer'}\n                  onMouseEnter={() =>\n                    this.highlightMnv(\n                      startIndices[i] + mnv.begin_shape_index,\n                      startIndices[i] + mnv.end_shape_index\n                    )\n                  }\n                  onMouseLeave={() =>\n                    this.highlightMnv(\n                      startIndices[i] + mnv.begin_shape_index,\n                      startIndices[i] + mnv.end_shape_index\n                    )\n                  }\n                  onClick={() =>\n                    this.zoomToMnv(startIndices[i] + mnv.begin_shape_index)\n                  }>\n                  <div className=\"pb2\">\n                    <Header as=\"h4\">{mnv.instruction}</Header>\n                  </div>\n                  {mnv.type !== 4 && mnv.type !== 5 && mnv.type !== 6 && (\n                    <div className={'flex justify-between'}>\n                      <div style={{ alignSelf: 'center', flexBasis: '100px' }}>\n                        <Icon\n                          circular\n                          name={'arrows alternate horizontal'}\n                          size=\"small\"\n                        />\n                        <div className={'dib pa1 f6'}>\n                          {getLength(mnv.length)}\n                        </div>\n                      </div>\n                      <div style={{ alignSelf: 'center', flexGrow: 1 }}>\n                        <Icon circular name={'time'} size=\"small\" />\n                        <div className={'dib pa1 f6'}>\n                          {new Date(mnv.time * 1000)\n                            .toISOString()\n                            .substr(11, 8)}\n                        </div>\n                      </div>\n                      <div style={{ alignSelf: 'center', flexBasis: '80px' }}>\n                        <Icon circular name={'bolt'} size=\"small\" />\n                        <div className={'dib pa1 f6'}>\n                          {mnv.cost.toFixed(2)}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                {mnv.type !== 4 && mnv.type !== 5 && mnv.type !== 6 && (\n                  <Divider fitted />\n                )}\n              </React.Fragment>\n            ))\n          )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { results } = state.directions\n  return {\n    results\n  }\n}\n\nexport default connect(mapStateToProps)(Maneuvers)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Segment, Button, Icon } from 'semantic-ui-react'\nimport L from 'leaflet'\n\nimport { makeRequest } from 'actions/directionsActions'\nimport { downloadFile } from 'actions/commonActions'\nimport Summary from './Summary'\nimport Maneuvers from './Maneuvers'\nimport { VALHALLA_OSM_URL } from 'utils/valhalla'\n\nclass OutputControl extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    profile: PropTypes.string,\n    activeTab: PropTypes.number,\n    successful: PropTypes.bool,\n    results: PropTypes.object\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      showResults: false\n    }\n    this.showManeuvers = this.showManeuvers.bind(this)\n  }\n\n  // necessary to calculate new routes the tab was changed from isochrone tab\n  // need to do this every time, because \"profile\" is global (otherwise we would\n  // calculate new when the profile was changed while being on the iso tab)\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if (nextProps.activeTab === 0 && this.props.activeTab === 1) {\n      nextProps.dispatch(makeRequest())\n    }\n    // if (nextProps.activeTab === 1) {\n    //   return false\n    // }\n    return true\n  }\n\n  showManeuvers() {\n    this.setState({ showResults: !this.state.showResults })\n  }\n\n  dateNow() {\n    let dtNow = new Date()\n    dtNow =\n      [dtNow.getMonth() + 1, dtNow.getDate(), dtNow.getFullYear()].join('/') +\n      '_' +\n      [dtNow.getHours(), dtNow.getMinutes(), dtNow.getSeconds()].join(':')\n    return dtNow\n  }\n  exportToJson = e => {\n    const { results } = this.props\n    const { data } = results[VALHALLA_OSM_URL]\n\n    e.preventDefault()\n    downloadFile({\n      data: JSON.stringify(data),\n      fileName: 'valhalla-directions_' + this.dateNow() + '.json',\n      fileType: 'text/json'\n    })\n  }\n\n  exportToGeoJson = e => {\n    const { results } = this.props\n    const coordinates = results[VALHALLA_OSM_URL].data.decodedGeometry\n\n    e.preventDefault()\n    downloadFile({\n      data: JSON.stringify(L.polyline(coordinates).toGeoJSON()),\n      fileName: 'valhalla-directions_' + this.dateNow() + '.geojson',\n      fileType: 'text/json'\n    })\n  }\n\n  render() {\n    const { successful } = this.props\n\n    return (\n      <Segment\n        style={{\n          margin: '0 1rem 10px',\n          display: successful ? 'block' : 'none'\n        }}>\n        <div className={'flex-column'}>\n          <Summary provider={VALHALLA_OSM_URL} />\n          <div className={'flex justify-between'}>\n            <Button\n              size=\"mini\"\n              toggle\n              active={this.state.showResults}\n              onClick={this.showManeuvers}>\n              {this.state.showResults ? 'Hide Maneuvers' : 'Show Maneuvers'}\n            </Button>\n            <div className={'flex'}>\n              <div\n                className={'flex pointer'}\n                style={{ alignSelf: 'center' }}\n                onClick={this.exportToJson}>\n                <Icon circular name={'download'} />\n                <div className={'pa1 b f6'}>{'JSON'}</div>\n              </div>\n              <div\n                className={'ml2 flex pointer'}\n                style={{ alignSelf: 'center' }}\n                onClick={this.exportToGeoJson}>\n                <Icon circular name={'download'} />\n                <div className={'pa1 b f6'}>{'GeoJSON'}</div>\n              </div>\n            </div>\n          </div>\n\n          {this.state.showResults ? (\n            <div className={'flex-column'}>\n              <Maneuvers provider={VALHALLA_OSM_URL} />\n            </div>\n          ) : null}\n        </div>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { profile, activeTab } = state.common\n  const { successful, results } = state.directions\n  return {\n    profile,\n    activeTab,\n    successful,\n    results\n  }\n}\n\nexport default connect(mapStateToProps)(OutputControl)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport * as R from 'ramda'\nimport { Checkbox, Icon } from 'semantic-ui-react'\nimport { showProvider } from 'actions/directionsActions'\n\nimport { downloadFile } from 'actions/commonActions'\n\nclass Summary extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    results: PropTypes.object,\n    header: PropTypes.string,\n    provider: PropTypes.string\n  }\n\n  handleChange = (event, data) => {\n    const { dispatch } = this.props\n    dispatch(showProvider(data.provider, data.checked))\n  }\n\n  exportToJson = e => {\n    const { provider, results } = this.props\n    const data = R.path([provider, 'data'], results)\n\n    const dateNow = new Date()\n    const dformat =\n      [dateNow.getMonth() + 1, dateNow.getDate(), dateNow.getFullYear()].join(\n        '/'\n      ) +\n      '_' +\n      [dateNow.getHours(), dateNow.getMinutes(), dateNow.getSeconds()].join(':')\n\n    e.preventDefault()\n    downloadFile({\n      data: JSON.stringify(data),\n      fileName: 'valhalla-isochrones_' + dformat + '.geojson',\n      fileType: 'text/json'\n    })\n  }\n\n  render() {\n    const { provider, results } = this.props\n    const data = R.path([provider, 'data'], results)\n    return (\n      <React.Fragment>\n        {'features' in data ? (\n          <React.Fragment>\n            <div className={'pr2'} style={{ alignSelf: 'center' }}>\n              <span className=\"b\">Isochrones</span>\n            </div>\n            <div\n              className={'flex pointer'}\n              style={{ alignSelf: 'center' }}\n              onClick={this.exportToJson}>\n              <Icon circular name={'download'} />\n              <div className={'pa1 b f6'}>{'Download'}</div>\n            </div>\n            <div style={{ alignSelf: 'center' }}>\n              <Checkbox\n                slider\n                label={'Map'}\n                checked={results[provider].show}\n                provider={provider}\n                onChange={this.handleChange}\n              />\n            </div>\n          </React.Fragment>\n        ) : (\n          <div>No isochrones found</div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { results } = state.isochrones\n  return {\n    results\n  }\n}\n\nexport default connect(mapStateToProps)(Summary)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Icon } from 'semantic-ui-react'\nimport { showProvider } from '../../actions/isochronesActions'\n\nclass ContoursInformation extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    results: PropTypes.object,\n    header: PropTypes.string,\n    provider: PropTypes.string,\n    profile: PropTypes.string\n  }\n\n  handleChange = (data, event) => {\n    const { dispatch } = this.props\n    dispatch(showProvider(event.provider, event.checked))\n  }\n\n  render() {\n    const { provider, results } = this.props\n\n    const { features } = results[provider].data\n\n    return (\n      <React.Fragment>\n        {features ? (\n          features.map((feature, key) => {\n            return (\n              <div className={'flex pb2'} key={key}>\n                <div\n                  className={'flex'}\n                  style={{ alignSelf: 'center', flexBasis: '140px' }}>\n                  <Icon circular name={'time'} />\n                  <div className={'pr2 f6 b pt1 pb1'}>\n                    {feature.properties.contour + ' minutes'}\n                  </div>\n                </div>\n                <div className={'flex'} style={{ alignSelf: 'center' }}>\n                  <Icon circular name={'move'} />\n                  <div className={'pa1 b f6'}>\n                    {feature.properties.area.toFixed(0) + ' km²'}\n                  </div>\n                </div>\n              </div>\n            )\n          })\n        ) : (\n          <div>No isochrones found</div>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { results } = state.isochrones\n  return {\n    results\n  }\n}\n\nexport default connect(mapStateToProps)(ContoursInformation)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Segment, Divider } from 'semantic-ui-react'\n\nimport Summary from './Summary'\nimport { makeIsochronesRequest } from 'actions/isochronesActions'\nimport ContoursInformation from './ContoursInformation'\nimport { VALHALLA_OSM_URL } from 'utils/valhalla'\n\nclass OutputControl extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    profile: PropTypes.string,\n    activeTab: PropTypes.number,\n    successful: PropTypes.bool,\n    results: PropTypes.object\n  }\n\n  // necessary to calculate new routes the tab was changed from isochrone tab\n  // need to do this every time, because \"profile\" is global (otherwise we would\n  // calculate new when the profile was changed while being on the iso tab)\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    if (nextProps.activeTab === 1 && this.props.activeTab === 0) {\n      nextProps.dispatch(makeIsochronesRequest())\n    }\n    if (nextProps.activeTab === 0) {\n      return false\n    }\n    return true\n  }\n\n  render() {\n    const { successful } = this.props\n\n    return (\n      <Segment\n        style={{ margin: '0 1rem', display: successful ? 'block' : 'none' }}>\n        <div className={'flex-column'}>\n          <div className={'flex justify-between pointer'}>\n            <Summary provider={VALHALLA_OSM_URL} />\n          </div>\n          <Divider />\n          <ContoursInformation provider={VALHALLA_OSM_URL} />\n        </div>\n      </Segment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { profile, activeTab } = state.common\n  const { successful, results } = state.isochrones\n  return {\n    profile,\n    activeTab,\n    successful,\n    results\n  }\n}\n\nexport default connect(mapStateToProps)(OutputControl)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { SemanticToastContainer, toast } from 'react-semantic-toasts'\nimport DirectionsControl from './Directions'\nimport IsochronesControl from './Isochrones'\nimport DirectionOutputControl from './Directions/OutputControl'\nimport IsochronesOutputControl from './Isochrones/OutputControl'\nimport { Segment, Tab } from 'semantic-ui-react'\nimport {\n  updateTab,\n  updateProfile,\n  updatePermalink,\n  zoomTo\n} from 'actions/commonActions'\nimport { fetchReverseGeocodePerma } from 'actions/directionsActions'\nimport {\n  fetchReverseGeocodeIso,\n  updateIsoSettings\n} from 'actions/isochronesActions'\n\nconst controlStyle = {\n  zIndex: 1000,\n  position: 'absolute',\n  width: '420px',\n  top: '10px',\n  left: '10px',\n  overflow: 'auto',\n  maxHeight: 'calc(100vh - 3vw)'\n}\n\nconst pairwise = (arr, func) => {\n  let cnt = 0\n  for (let i = 0; i < arr.length - 1; i += 2) {\n    func(arr[i], arr[i + 1], cnt)\n    cnt += 1\n  }\n}\n\nclass MainControl extends React.Component {\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    message: PropTypes.object,\n    activeDataset: PropTypes.string,\n    activeTab: PropTypes.number\n  }\n\n  componentDidMount = () => {\n    const { dispatch } = this.props\n\n    // toast({\n    //   type: 'warning',\n    //   icon: 'desktop',\n    //   title: 'Expected Downtime',\n    //   description:\n    //     'Due to server maintenance, Valhalla is offline until the evening of January 10th.',\n    //   time: 5000\n    // })\n\n    toast({\n      type: 'success',\n      icon: 'heart',\n      title: 'Welcome to Valhalla!',\n      description: 'Global Routing Service - funded by FOSSGIS e.V.',\n      time: 5000\n    })\n\n    const params = Object.fromEntries(new URL(document.location).searchParams)\n\n    if ('profile' in params) {\n      dispatch(updateProfile({ profile: params.profile }))\n    }\n\n    let activeTab\n    if (\n      window.location.pathname === '/' ||\n      window.location.pathname === '/directions'\n    ) {\n      activeTab = 0\n      dispatch(updateTab({ activeTab }))\n    } else if (window.location.pathname === '/isochrones') {\n      activeTab = 1\n      dispatch(updateTab({ activeTab }))\n    }\n\n    if ('wps' in params && params.wps.length > 0) {\n      const coordinates = params.wps.split(',').map(Number)\n      const processedCoords = []\n      pairwise(coordinates, (current, next, i) => {\n        const latLng = { lat: next, lng: current }\n        const payload = {\n          latLng,\n          fromPerma: true,\n          permaLast: i == coordinates.length / 2 - 1,\n          index: i\n        }\n        processedCoords.push([latLng.lat, latLng.lng])\n        if (activeTab == 0) {\n          dispatch(fetchReverseGeocodePerma(payload))\n        } else {\n          dispatch(fetchReverseGeocodeIso(current, next))\n\n          if ('range' in params && 'interval' in params) {\n            const maxRangeName = 'maxRange'\n            const intervalName = 'interval'\n            const maxRangeValue = params.range\n            const intervalValue = params.interval\n\n            dispatch(\n              updateIsoSettings({\n                maxRangeName,\n                intervalName,\n                value: maxRangeValue\n              })\n            )\n            dispatch(\n              updateIsoSettings({\n                undefined,\n                intervalName,\n                value: intervalValue\n              })\n            )\n          }\n        }\n      })\n      dispatch(zoomTo(processedCoords))\n    }\n  }\n\n  componentDidUpdate = prevProps => {\n    const { message } = this.props\n\n    if (message.receivedAt > prevProps.message.receivedAt) {\n      toast({\n        type: message.type,\n        icon: message.icon,\n        title: message.topic,\n        description: message.description,\n        time: 5000\n      })\n    }\n  }\n\n  handleTabChange = (event, data) => {\n    const { dispatch } = this.props\n    const activeTab = data.activeIndex\n\n    dispatch(updateTab({ activeTab }))\n    dispatch(updatePermalink())\n  }\n\n  render() {\n    const { activeTab } = this.props\n    const appPanes = [\n      {\n        menuItem: 'Directions',\n        render: () => (\n          <Tab.Pane style={{ padding: '0 0 0 0' }} attached={false}>\n            <DirectionsControl />\n          </Tab.Pane>\n        )\n      },\n      {\n        menuItem: 'Isochrones',\n        render: () => (\n          <Tab.Pane style={{ padding: '0 0 0 0' }} attached={false}>\n            <IsochronesControl />\n          </Tab.Pane>\n        )\n      }\n    ]\n\n    const ServiceTabs = () => (\n      <Tab\n        activeIndex={activeTab}\n        onTabChange={this.handleTabChange}\n        menu={{ pointing: true }}\n        panes={appPanes}\n      />\n    )\n\n    return (\n      <div style={controlStyle}>\n        <Segment basic style={{ paddingBottom: 0 }}>\n          <div>\n            <ServiceTabs />\n          </div>\n        </Segment>\n        <DirectionOutputControl />\n        <IsochronesOutputControl />\n        <SemanticToastContainer position=\"bottom-center\" />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { message, activeTab } = state.common\n  return {\n    message,\n    activeTab\n  }\n}\n\nexport default connect(mapStateToProps)(MainControl)\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { Form, Label, Popup, Icon } from 'semantic-ui-react'\nimport { Slider } from '@mui/material'\nimport { debounce } from 'throttle-debounce'\nimport { settingsInit } from 'Controls/settings-options'\n\nimport PropTypes from 'prop-types'\n\nconst CustomSlider = props => {\n  const { settings, option, handleUpdateSettings } = props\n  const { min, max, step } = option.settings\n\n  const [sliderVal, setSliderVal] = useState(parseFloat(settings[option.param]))\n\n  useEffect(() => {\n    setSliderVal(parseFloat(settings[option.param]))\n  }, [props])\n\n  const handleChange = value => {\n    // reset\n    if (isNaN(value)) {\n      value = settingsInit[option.param]\n    }\n    setSliderVal(parseFloat(value))\n    debounce(\n      300,\n      handleUpdateSettings({\n        name: option.param,\n        value: parseFloat(value)\n      })\n    )\n  }\n\n  return (\n    <Fragment>\n      <Form.Group inline>\n        <Popup\n          content={'Reset Value'}\n          size={'tiny'}\n          trigger={\n            <Icon name=\"repeat\" size=\"small\" onClick={() => handleChange()} />\n          }\n        />\n        <Form.Input\n          width={16}\n          size=\"small\"\n          type=\"number\"\n          step=\"any\"\n          value={sliderVal}\n          placeholder=\"Enter Value\"\n          name={option.param}\n          onChange={e => handleChange(e.target.value)}\n        />\n        <Popup\n          content={'Units'}\n          size={'tiny'}\n          trigger={\n            <Label basic size={'small'} style={{ cursor: 'default' }}>\n              {option.unit}\n            </Label>\n          }\n        />\n      </Form.Group>\n      <div>\n        <Slider\n          min={min}\n          size={'small'}\n          max={max}\n          step={step}\n          value={sliderVal}\n          color=\"secondary\"\n          aria-label=\"Default\"\n          valueLabelDisplay=\"auto\"\n          onChange={e => {\n            handleChange(e.target.value)\n          }}\n        />\n      </div>\n    </Fragment>\n  )\n}\n\nCustomSlider.propTypes = {\n  option: PropTypes.object,\n  settings: PropTypes.object,\n  handleUpdateSettings: PropTypes.func\n}\n\nexport default CustomSlider\n","import React, { Fragment } from 'react'\nimport * as R from 'ramda'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { debounce } from 'throttle-debounce'\nimport {\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Popup,\n  Segment,\n  Accordion,\n  Dropdown,\n  Button\n} from 'semantic-ui-react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport { profile_settings, settings_general } from './settings-options'\nimport {\n  updateSettings,\n  doShowSettings,\n  filterProfileSettings,\n  resetSettings\n} from 'actions/commonActions'\n\nimport CustomSlider from '../components/CustomSlider'\nimport { makeRequest } from 'actions/directionsActions'\nimport { makeIsochronesRequest } from 'actions/isochronesActions'\n\nconst Checkbox = props => {\n  const { settings, option, dispatch } = props\n\n  const handleChange = (e, { checked }) => {\n    const value = !!checked\n    dispatch(\n      updateSettings({\n        name: option.param,\n        value\n      })\n    )\n  }\n\n  return (\n    <Fragment>\n      <Form.Checkbox\n        width={10}\n        label={option.name}\n        checked={settings[option.param]}\n        onChange={handleChange}\n      />\n    </Fragment>\n  )\n}\n\nCheckbox.propTypes = {\n  option: PropTypes.object,\n  settings: PropTypes.object,\n  dispatch: PropTypes.func\n}\n\nclass SettingsPanel extends React.Component {\n  static propTypes = {\n    id: PropTypes.number,\n    index: PropTypes.number,\n    activeTab: PropTypes.number,\n    message: PropTypes.object,\n    profile: PropTypes.string,\n    settings: PropTypes.object,\n    showSettings: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired\n  }\n\n  constructor(props) {\n    super(props)\n    this.handleUpdateSettings = debounce(100, this.handleUpdateSettings)\n    this.state = {\n      activeIndexProfile: 0,\n      activeIndexGeneral: 0,\n      generalSettings: {},\n      extraSettings: {},\n      copied: false\n    }\n  }\n\n  handleUpdateSettings = ({ name, value }) => {\n    const { dispatch } = this.props\n    dispatch(\n      updateSettings({\n        name,\n        value\n      })\n    )\n  }\n\n  // the react slider will update the settings twice\n  // we however only want this component to update if the\n  // settings really change, therefor deep check with ramda\n  shouldComponentUpdate(nextProps, nextState) {\n    const { settings, profile, showSettings } = this.props\n\n    if (!R.equals(settings, nextProps.settings)) {\n      return true\n    }\n    if (!R.equals(profile, nextProps.profile)) {\n      return true\n    }\n    if (!R.equals(showSettings, nextProps.showSettings)) {\n      return true\n    }\n    if (!R.equals(this.state, nextState)) {\n      return true\n    }\n    return false\n  }\n  // we really only want to call the valhalla backend if settings have changed\n  // therefor using rambda for deep object comparison\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    const { dispatch, settings, activeTab, profile } = this.props\n\n    if (!R.equals(profile, nextProps.profile)) {\n      const { generalSettings } = this.state\n      Object.keys(generalSettings).forEach(v => (generalSettings[v] = false))\n\n      const { extraSettings } = this.state\n      Object.keys(extraSettings).forEach(v => (extraSettings[v] = false))\n\n      this.setState({ generalSettings, extraSettings })\n    }\n\n    if (!R.equals(settings, nextProps.settings)) {\n      activeTab == 0\n        ? dispatch(makeRequest())\n        : dispatch(makeIsochronesRequest())\n    }\n  }\n\n  handleShowSettings = (settingsType, i) => {\n    const settings = { ...this.state[settingsType] }\n    settings[i] = !settings[i]\n    this.setState({ [settingsType]: settings })\n  }\n\n  handleBikeTypeChange = (e, data) => {\n    const { value, name } = data\n    const { dispatch } = this.props\n    dispatch(\n      updateSettings({\n        name,\n        value\n      })\n    )\n  }\n\n  resetConfigSettings = () => {\n    const { dispatch } = this.props\n    dispatch(resetSettings())\n  }\n\n  extractSettings = (profile, settings) => {\n    return JSON.stringify(filterProfileSettings(profile, settings))\n  }\n\n  render() {\n    const { dispatch, profile, settings, showSettings } = this.props\n\n    const no_profile_settings = profile_settings[profile].boolean.length === 0\n    const width = no_profile_settings ? 200 : 400\n\n    return (\n      <React.Fragment>\n        {showSettings ? (\n          <Segment\n            style={{\n              width: width,\n              zIndex: 999,\n              position: 'absolute',\n              right: 60,\n              top: -5,\n              height: '95%',\n              overflow: 'auto'\n            }}>\n            <Grid columns={16} divided>\n              <Grid.Row>\n                {!no_profile_settings && (\n                  <Grid.Column width={8}>\n                    <Form size={'small'}>\n                      <Header as=\"h4\">Extra Settings</Header>\n                      {profile_settings[profile].numeric.map((option, key) => (\n                        <Fragment key={key}>\n                          <div className=\"flex pointer\">\n                            <div\n                              onClick={() =>\n                                this.handleShowSettings('extraSettings', key)\n                              }>\n                              <Icon\n                                name={\n                                  this.state.extraSettings[key]\n                                    ? 'caret down'\n                                    : 'caret right'\n                                }\n                              />\n                              <span className=\"b f6\">{option.name}</span>\n                            </div>\n                            <div style={{ marginLeft: 'auto' }}>\n                              <Popup\n                                content={option.description}\n                                size={'tiny'}\n                                trigger={\n                                  <Icon color=\"grey\" name=\"help circle\" />\n                                }\n                              />\n                            </div>\n                          </div>\n                          {this.state.extraSettings[key] ? (\n                            <CustomSlider\n                              key={key}\n                              option={option}\n                              dispatch={dispatch}\n                              settings={settings}\n                              handleUpdateSettings={this.handleUpdateSettings}\n                            />\n                          ) : null}\n                        </Fragment>\n                      ))}\n                      <Divider />\n                      <Fragment>\n                        {profile_settings[profile].boolean.map(\n                          (option, key) => {\n                            return (\n                              <div key={key} className=\"flex\">\n                                <Checkbox\n                                  option={option}\n                                  dispatch={dispatch}\n                                  settings={settings}\n                                />\n                                <div style={{ marginLeft: 'auto' }}>\n                                  <Popup\n                                    content={option.description}\n                                    size={'tiny'}\n                                    trigger={\n                                      <Icon color=\"grey\" name=\"help circle\" />\n                                    }\n                                  />\n                                </div>\n                              </div>\n                            )\n                          }\n                        )}\n                      </Fragment>\n                      <Divider />\n                      <Fragment>\n                        {profile_settings[profile].enum.map((option, key) => {\n                          return (\n                            <div key={key} className=\"flex\">\n                              <Dropdown\n                                placeholder=\"Select Bicycle Type\"\n                                fluid\n                                onChange={this.handleBikeTypeChange}\n                                value={settings.bicycle_type}\n                                selection\n                                name={'bicycle_type'}\n                                options={option.enums}\n                              />\n\n                              <div style={{ marginLeft: 'auto' }}>\n                                <Popup\n                                  content={option.description}\n                                  size={'tiny'}\n                                  trigger={\n                                    <Icon color=\"grey\" name=\"help circle\" />\n                                  }\n                                />\n                              </div>\n                            </div>\n                          )\n                        })}\n                      </Fragment>\n                    </Form>\n                  </Grid.Column>\n                )}\n                <Grid.Column width={no_profile_settings ? 16 : 8}>\n                  <Form size={'small'}>\n                    <div className={'flex flex-row justify-between'}>\n                      <Header as=\"h4\">General Settings</Header>\n                      <Icon\n                        style={{ cursor: 'pointer' }}\n                        name=\"remove circle\"\n                        onClick={() => dispatch(doShowSettings())}\n                      />\n                    </div>\n                    <Accordion>\n                      {settings_general[profile].numeric.map((option, key) => (\n                        <Fragment key={key}>\n                          <div className=\"flex pointer\">\n                            <div\n                              onClick={() =>\n                                this.handleShowSettings('generalSettings', key)\n                              }>\n                              <Icon\n                                name={\n                                  this.state.generalSettings[key]\n                                    ? 'caret down'\n                                    : 'caret right'\n                                }\n                              />\n                              <span className=\"b f6\">{option.name}</span>\n                            </div>\n                            <div style={{ marginLeft: 'auto' }}>\n                              <Popup\n                                content={option.description}\n                                size={'tiny'}\n                                trigger={\n                                  <Icon color=\"grey\" name=\"help circle\" />\n                                }\n                              />\n                            </div>\n                          </div>\n                          {this.state.generalSettings[key] ? (\n                            <CustomSlider\n                              key={key}\n                              option={option}\n                              dispatch={dispatch}\n                              settings={settings}\n                              handleUpdateSettings={this.handleUpdateSettings}\n                            />\n                          ) : null}\n                        </Fragment>\n                      ))}\n                    </Accordion>\n                    <Divider />\n                    {settings_general[profile].boolean.map((option, key) => {\n                      return (\n                        <div key={key} className=\"flex\">\n                          <Checkbox\n                            key={key}\n                            option={option}\n                            dispatch={dispatch}\n                            settings={settings}\n                          />\n                          <div style={{ marginLeft: 'auto' }}>\n                            <Popup\n                              content={option.description}\n                              size={'tiny'}\n                              trigger={<Icon color=\"grey\" name=\"help circle\" />}\n                            />\n                          </div>\n                        </div>\n                      )\n                    })}\n                    {settings_general.all.boolean.map((option, key) => {\n                      return (\n                        <div key={key} className=\"flex\">\n                          <Checkbox\n                            key={key}\n                            option={option}\n                            dispatch={dispatch}\n                            settings={settings}\n                          />\n                          <div style={{ marginLeft: 'auto' }}>\n                            <Popup\n                              content={option.description}\n                              size={'tiny'}\n                              trigger={<Icon color=\"grey\" name=\"help circle\" />}\n                            />\n                          </div>\n                        </div>\n                      )\n                    })}\n                  </Form>\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column width={16}>\n                  <CopyToClipboard\n                    text={this.extractSettings(profile, settings)}\n                    onCopy={() => this.setState({ copied: true })}>\n                    <Button\n                      basic\n                      size=\"mini\"\n                      icon\n                      color={this.state.copied ? 'green' : undefined}\n                      labelPosition=\"left\">\n                      <Icon name=\"download\" />\n                      Copy to Clipboard\n                    </Button>\n                  </CopyToClipboard>\n                  <Button\n                    basic\n                    size=\"mini\"\n                    icon\n                    onClick={this.resetConfigSettings}\n                    labelPosition=\"left\">\n                    <Icon name=\"remove\" />\n                    Reset\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n          </Segment>\n        ) : (\n          ''\n        )}\n      </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const { message, profile, settings, activeTab, showSettings } = state.common\n  return {\n    showSettings,\n    message,\n    profile,\n    settings,\n    activeTab\n  }\n}\n\nexport default connect(mapStateToProps)(SettingsPanel)\n","import React from 'react'\n\nimport Map from './Map/Map'\nimport MainControl from './Controls'\nimport SettingsPanel from './Controls/settings-panel'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Map />\n        <MainControl />\n        <SettingsPanel />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\n\nimport reducer from './reducers'\nimport App from './App'\nimport './index.css' // postCSS import of CSS module\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nrender(\n  <Provider store={store}>\n    {' '}\n    <App />\n  </Provider>,\n  document.getElementById('valhalla-app-root')\n)\n"],"sourceRoot":""}